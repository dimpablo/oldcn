=== üìÑ task1.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –í–æ–ø—Ä–æ—Å—ã –æ –¥–æ–∂–¥–µ</title>
</head>
<body>
<h2>–ö–∞–∫–æ–π –æ—Ç—Ç–µ–Ω–æ–∫ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç —á–∞—Å—Ç–∏—Ü–∞ ÂÖ∂ –≤ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö?</h2>
<p><strong>–ü—Ä–∏–º–µ—Ä: ¬´‰∏ôÂØÖÂçúÁà≠ Ë≤û ÂÖ∂Èõ®¬ª ... ¬´Áô∏‰∫• Ë≤û ‰∏çÂÖ∂Èõ®¬ª</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">b«êng y√≠n b«î zhƒìng zhƒìn q√≠ y«î ... gu«ê h√†i zhƒìn b√π q√≠ y«î</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–£–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è: ¬´–î–æ–∂–¥—å —É–∂–µ –ø—Ä–æ—à–µ–ª¬ª", correct: false },
    { text: "–ß–∞—Å—Ç–∏—Ü–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: ¬´–ë—É–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å?¬ª", correct: true },
    { text: "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ¬´–ü—É—Å—Ç—å –ø–æ–π–¥–µ—Ç –¥–æ–∂–¥—å!¬ª", correct: false },
    { text: "–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: ¬´–î–æ–∂–¥—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–µ–ª¬ª", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ÂÖ∂ –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö –≤—ã—Ä–∞–∂–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å: ¬´–ë—É–¥–µ—Ç –ª–∏...?¬ª';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫ ÂÖ∂ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å Ë≤û –∏ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ–º.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task2.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ò–Ω–≤–µ—Ä—Å–∏—è —Å ‰∏çÊàë</title>
</head>
<body>
<h2>–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ Â∏ù‰∏çÊàëÈôçÁÜØ?</h2>
<p><strong>–ü–æ–¥—Å–∫–∞–∑–∫–∞: –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –∏ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">d√¨ b√π w«í ji√†ng h√†n</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–Ø –Ω–µ –ø–æ–ª—É—á–∞—é –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –æ—Ç –ù–µ–±–µ—Å", correct: false },
    { text: "–ù–µ–±–µ—Å–∞ –Ω–µ –ø–æ—Å—ã–ª–∞—é—Ç –º–Ω–µ –∑–Ω–æ–π", correct: true },
    { text: "–Ø –Ω–µ –ø–æ—Å—ã–ª–∞—é –∑–Ω–æ–π –ù–µ–±–µ—Å–∞–º", correct: false },
    { text: "–ù–µ–±–µ—Å–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –º–æ–π –¥–∞—Ä", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ‰∏çÊàëÈôçÁÜØ ‚Äî –∏–Ω–≤–µ—Ä—Å–∏—è: "–Ω–µ –ø–æ—Å—ã–ª–∞—é—Ç –º–Ω–µ –∑–Ω–æ–π".';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ: –ø—Ä–∏ –∏–Ω–≤–µ—Ä—Å–∏–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–∞–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç—Ä–∏—Ü–∞–Ω–∏—è.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task3.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –î–≤–æ–π–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</title>
</head>
<body>
<h2>–ö–∞–∫–æ–π –≥–ª–∞–≥–æ–ª —Ç—Ä–µ–±—É–µ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ùÂèóÊàëÂπ¥?</h2>
<p><strong>–ü—Ä–∏–º–µ—Ä: ¬´Â∏ùÂèóÊàëÂπ¥¬ª ‚Äî –ù–µ–±–µ—Å–∞ –ø–æ—Å—ã–ª–∞—é—Ç –Ω–∞–º —É—Ä–æ–∂–∞–π</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">d√¨ sh√≤u w«í ni√°n</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Â∏ù", correct: false },
    { text: "Âèó", correct: true },
    { text: "Êàë", correct: false },
    { text: "Âπ¥", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Âèó —Ç—Ä–µ–±—É–µ—Ç –∫–æ—Å–≤–µ–Ω–Ω–æ–≥–æ (–º–Ω–µ) –∏ –ø—Ä—è–º–æ–≥–æ (—É—Ä–æ–∂–∞–π) –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ö–∞–∫–æ–π –≥–ª–∞–≥–æ–ª –≤—ã—Ä–∞–∂–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ "–ø–æ—Å–ª–∞—Ç—å"?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task4.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤</title>
</head>
<body>
<h2>–ö–∞–∫–æ–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ Â∏ù‰∏çÊàëÂèó‰Ωë?</h2>
<p><strong>–ü–µ—Ä–µ–≤–æ–¥: –ù–µ–±–µ—Å–∞ –Ω–µ –ø–æ—Å—ã–ª–∞—é—Ç –Ω–∞–º –ø–æ–º–æ—â—å</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">d√¨ b√π w«í sh√≤u y√≤u</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ü—Ä—è–º–æ–π –ø–æ—Ä—è–¥–æ–∫: –ü–æ–¥–ª–µ–∂–∞—â–µ–µ ‚Äî –°–∫–∞–∑—É–µ–º–æ–µ ‚Äî –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", correct: false },
    { text: "–ò–Ω–≤–µ—Ä—Å–∏—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç—Ä–∏—Ü–∞–Ω–∏—è", correct: true },
    { text: "–ü–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥", correct: false },
    { text: "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏–µ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ‰∏çÊàëÂèó‰Ωë ‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–Ω–≤–µ—Ä—Å–∏—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–æ–ª–æ–∂–µ–Ω–∏–µ Êàë –ø–æ—Å–ª–µ ‰∏ç.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task5.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –û—Ç—Ä–∏—Ü–∞–Ω–∏–µ –∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ</title>
</head>
<body>
<h2>–ü–æ—á–µ–º—É –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ù‰∏çÊàëÂèó‰Ωë –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ‰∏ç, –∞ –Ω–µ Âºó?</h2>
<p><strong>–°—Ä–∞–≤–Ω–∏—Ç–µ: Â∏ùÂºóÂèó‰Ωë vs Â∏ù‰∏çÊàëÂèó‰Ωë</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">d√¨ f√∫ sh√≤u y√≤u vs d√¨ b√π w«í sh√≤u y√≤u</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ü–æ—Ç–æ–º—É —á—Ç–æ Âºó –Ω–µ —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç—Å—è —Å –ª–∏—á–Ω—ã–º–∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è–º–∏", correct: true },
    { text: "–ü–æ—Ç–æ–º—É —á—Ç–æ ‰∏ç —Å–∏–ª—å–Ω–µ–µ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é", correct: false },
    { text: "–≠—Ç–æ –æ—à–∏–±–∫–∞ –ø–µ—Ä–µ–ø–∏—Å—á–∏–∫–∞", correct: false },
    { text: "–ü–æ—Ç–æ–º—É —á—Ç–æ Âèó ‚Äî –±–µ–∑–ª–∏—á–Ω—ã–π –≥–ª–∞–≥–æ–ª", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Âºó –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–≤–µ—Ä—Å–∏–∏ —Å –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ–º.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è Âºó.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task6.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–µ—Ä–µ–≤–æ–¥ –∏–Ω–≤–µ—Ä—Å–∏–∏</title>
</head>
<body>
<h2>–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ Â∏ù‰∏çÊàëÂÖ∂Âèó‰Ωë?</h2>
<p><strong>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏—Ü—É ÂÖ∂</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">d√¨ b√π w«í q√≠ sh√≤u y√≤u</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ù–µ–±–µ—Å–∞ –Ω–µ –ø–æ—Å—ã–ª–∞—é—Ç –º–Ω–µ –ø–æ–º–æ—â—å", correct: true },
    { text: "–ù–µ–±–µ—Å–∞ –ø–æ—Å—ã–ª–∞—é—Ç –º–Ω–µ –ø–æ–º–æ—â—å", correct: false },
    { text: "–Ø –Ω–µ –ø–æ—Å—ã–ª–∞—é –ø–æ–º–æ—â—å –ù–µ–±–µ—Å–∞–º", correct: false },
    { text: "–ù–µ–±–µ—Å–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –º–æ—é –º–æ–ª–∏—Ç–≤—É", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ÂÖ∂ –∑–¥–µ—Å—å ‚Äî —á–∞—Å—Ç—å –≤–æ–ø—Ä–æ—Å–∞, –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. ÂÖ∂ –Ω–µ –æ—Ç–º–µ–Ω—è–µ—Ç –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ ‰∏ç.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task7.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞</title>
</head>
<body>
<h2>–ö–∞–∫–∞—è –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Ê¥πÂºó‰ΩúÂÖπÈÇëÁ•∏?</h2>
<p><strong>–ü–µ—Ä–µ–≤–æ–¥: –†–µ–∫–∞ –•—É–∞–Ω –Ω–µ –ø—Ä–∏—á–∏–Ω–∏—Ç –±–µ–¥—ã —ç—Ç–æ–º—É –≥–æ—Ä–æ–¥—É</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">hu√°n f√∫ zu√≤ zƒ´ y√¨ hu√≤</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ò–Ω–≤–µ—Ä—Å–∏—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å ‰∏ç", correct: false },
    { text: "–û—Ç—Ä–∏—Ü–∞–Ω–∏–µ —Å Âºó –∏ –ø—Ä—è–º–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", correct: true },
    { text: "–ü–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥", correct: false },
    { text: "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∫–ª–æ–Ω–µ–Ω–∏–µ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –ó–¥–µ—Å—å –Ω–µ—Ç –∏–Ω–≤–µ—Ä—Å–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Âºó.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ—Ç –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç—Ä–∏—Ü–∞–Ω–∏—è.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task8.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –õ–∏—á–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è</title>
</head>
<body>
<h2>–ö–∞–∫–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –æ–∑–Ω–∞—á–∞–µ—Ç "–º—ã" –≤ –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Êàë", correct: true },
    { text: "‰Ωô", correct: false },
    { text: "Ê±ù", correct: false },
    { text: "ÂÖ∂", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Êàë ‚Äî "–º—ã", ‰Ωô ‚Äî "—è".';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ, –∫–∞–∫–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—Å—Ç–∞—Ö —Å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–º –ø–æ–¥–ª–µ–∂–∞—â–∏–º.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task9.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–π</title>
</head>
<body>
<h2>–ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è Êàë –∏ ‰Ωô?</h2>
<p><strong>–°—Ä–∞–≤–Ω–∏—Ç–µ: ‰ΩôÂèóÂπ¥ –∏ ÊàëÂèóÂπ¥</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">y√∫ sh√≤u ni√°n vs w«í sh√≤u ni√°n</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Êàë ‚Äî —Ç–æ–ª—å–∫–æ ¬´—è¬ª, ‰Ωô ‚Äî —Ç–æ–ª—å–∫–æ ¬´–º—ã¬ª", correct: false },
    { text: "‰Ωô ‚Äî ¬´—è¬ª, Êàë ‚Äî ¬´–º—ã¬ª –∏–ª–∏ ¬´—è¬ª", correct: true },
    { text: "–û–Ω–∏ –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã", correct: false },
    { text: "‰Ωô ‚Äî —É—Å—Ç–∞—Ä–µ–≤—à–µ–µ, Êàë ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ‰Ωô ‚Äî —Ç–æ–ª—å–∫–æ 1-–µ –ª. –µ–¥.—á., Êàë ‚Äî –∏ ¬´—è¬ª, –∏ ¬´–º—ã¬ª.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task10.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–µ—Ä–µ–≤–æ–¥ —Å —Ä—É—Å—Å–∫–æ–≥–æ</title>
</head>
<body>
<h2>–ö–∞–∫ –±—É–¥–µ—Ç –Ω–∞ –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º: "–ù–µ–±–µ—Å–∞ –Ω–µ –ø–æ—Å—ã–ª–∞—é—Ç –º–Ω–µ —É—Ä–æ–∂–∞–π"?</h2>
<p><strong>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω–≤–µ—Ä—Å–∏—é</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Â∏ù‰∏çÊàëÂèóÂπ¥", correct: true },
    { text: "Â∏ùÂºóÂèóÊàëÂπ¥", correct: false },
    { text: "ÊàëÂºóÂèóÂπ¥", correct: false },
    { text: "Â∏ù‰∏çÂπ¥ÂèóÊàë", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–≤–µ—Ä—Å–∏—è: ‰∏çÊàëÂèóÂπ¥.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ: –ø–æ—Å–ª–µ ‰∏ç ‚Äî –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ, –∑–∞—Ç–µ–º –≥–ª–∞–≥–æ–ª.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task11.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ì–ª–∞–≥–æ–ª ‰Ωú</title>
</head>
<body>
<h2>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç –≥–ª–∞–≥–æ–ª ‰Ωú –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Ê¥π‰ΩúÂÖπÈÇëÁ•∏?</h2>
<p><strong>–ü–µ—Ä–µ–≤–æ–¥: —Ä–µ–∫–∞ –•—É–∞–Ω –ø—Ä–∏—á–∏–Ω—è–µ—Ç –±–µ–¥—É –≥–æ—Ä–æ–¥—É</strong></p>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded'); this.classList.toggle('expanded')">–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å</button>
  <div class="pinyin-text">hu√°n zu√≤ zƒ´ y√¨ hu√≤</div>
</div>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–°–æ–∑–¥–∞–≤–∞—Ç—å, –ø—Ä–∏—á–∏–Ω—è—Ç—å", correct: true },
    { text: "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å", correct: false },
    { text: "–ó–∞—â–∏—â–∞—Ç—å", correct: false },
    { text: "–ü—Ä–æ—Å–∏—Ç—å", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ‰Ωú ‚Äî "–ø—Ä–∏—á–∏–Ω—è—Ç—å", "—Å–æ–∑–∏–¥–∞—Ç—å", –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–¥—É–º–∞–π—Ç–µ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —Ä–µ–∫–∞ —Å –≥–æ—Ä–æ–¥–æ–º.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task12.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ÂèóÊàëÂπ¥</title>
</head>
<body>
<h2>–ö–∞–∫–æ–π —Ç–∏–ø –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—Ä–∞–∂–∞–µ—Ç Êàë –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ùÂèóÊàëÂπ¥?</h2>
<p><strong>–í–∞—Ä–∏–∞–Ω—Ç—ã: –ø—Ä—è–º–æ–µ, –∫–æ—Å–≤–µ–Ω–Ω–æ–µ, –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ü—Ä—è–º–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", correct: false },
    { text: "–ö–æ—Å–≤–µ–Ω–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", correct: true },
    { text: "–û–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏", correct: false },
    { text: "–ü–æ–¥–ª–µ–∂–∞—â–µ–µ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Êàë ‚Äî –∫–æ—Å–≤–µ–Ω–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–∫–æ–º—É?).';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ö–æ–º—É –ø–æ—Å—ã–ª–∞—é—Ç —É—Ä–æ–∂–∞–π?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task13.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑</title>
</head>
<body>
<h2>–í—ã–¥–µ–ª–∏—Ç–µ —Å–∫–∞–∑—É–µ–º–æ–µ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ù‰∏çÊàëÈôçÁÜØ</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Â∏ù", correct: false },
    { text: "‰∏ç", correct: false },
    { text: "Êàë", correct: false },
    { text: "ÈôçÁÜØ", correct: true }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –°–∫–∞–∑—É–µ–º–æ–µ ‚Äî ÈôçÁÜØ.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ß—Ç–æ –¥–µ–ª–∞—é—Ç –ù–µ–±–µ—Å–∞?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task14.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –°–ª–æ–≤–∞—Ä—å</title>
</head>
<body>
<h2>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÁÜØ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Â∏ù‰∏çÊàëÈôçÁÜØ?</h2>
<p><strong>–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–≤—è–∑–∞–Ω–æ —Å –ø–æ–≥–æ–¥–æ–π</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–î–æ–∂–¥—å", correct: false },
    { text: "–ó–Ω–æ–π, –∂–∞—Ä–∞", correct: true },
    { text: "–£—Ä–æ–∂–∞–π", correct: false },
    { text: "–ú–æ–ª–∏—Ç–≤–∞", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ÁÜØ ‚Äî –∑–Ω–æ–π, –∂–∞—Ä–∞.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ—Å—ã–ª–∞—Ç—å –∏–ª–∏ –Ω–µ –ø–æ—Å—ã–ª–∞—Ç—å –ù–µ–±–æ.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task15.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–µ—Ä–µ–ø–∏—Å—å —Ç–µ–∫—Å—Ç–∞</title>
</head>
<body>
<h2>–ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ Â∏ùÂèóÊàëÂπ¥ –≤ –ø—Ä—è–º–æ–º –ø–æ—Ä—è–¥–∫–µ</h2>
<p><strong>–ë–µ–∑ –∏–Ω–≤–µ—Ä—Å–∏–∏</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Â∏ùÂèóÂπ¥Êàë", correct: true },
    { text: "ÊàëÂπ¥ÂèóÂ∏ù", correct: false },
    { text: "Âπ¥ÊàëÂèóÂ∏ù", correct: false },
    { text: "Â∏ùÂπ¥ÂèóÊàë", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –ü—Ä—è–º–æ–π –ø–æ—Ä—è–¥–æ–∫: Â∏ùÂèóÂπ¥Êàë.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ö–æ–º—É –ø–æ—Å—ã–ª–∞—é—Ç? –ß—Ç–æ –ø–æ—Å—ã–ª–∞—é—Ç?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task16.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –û—Ç—Ä–∏—Ü–∞–Ω–∏–µ Âºó</title>
</head>
<body>
<h2>–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Âºó –≤–º–µ—Å—Ç–æ ‰∏ç?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ü–µ—Ä–µ–¥ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ–º –≤ –∏–Ω–≤–µ—Ä—Å–∏–∏", correct: false },
    { text: "–ü–µ—Ä–µ–¥ –≥–ª–∞–≥–æ–ª–æ–º –±–µ–∑ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è", correct: true },
    { text: "–í –≤–æ–ø—Ä–æ—Å–∞—Ö", correct: false },
    { text: "–í –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Âºó ‚Äî –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ—Ç—Ä–∏—Ü–∞–Ω–∏—è –≥–ª–∞–≥–æ–ª–æ–≤ –±–µ–∑ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è Âºó.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task17.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–µ—Ä–µ–≤–æ–¥</title>
</head>
<body>
<h2>–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ: "–†–µ–∫–∞ –•—É–∞–Ω –Ω–µ –ø—Ä–∏—á–∏–Ω–∏—Ç –±–µ–¥—ã —ç—Ç–æ–º—É –≥–æ—Ä–æ–¥—É"</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Ê¥πÂºó‰ΩúÂÖπÈÇëÁ•∏", correct: true },
    { text: "Ê¥π‰∏ç‰ΩúÂÖπÈÇëÁ•∏", correct: false },
    { text: "ÂÖπÈÇëÂºó‰ΩúÊ¥πÁ•∏", correct: false },
    { text: "Á•∏‰ΩúÊ¥πÂºóÂÖπÈÇë", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –≠—Ç–æ –¥–æ—Å–ª–æ–≤–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –£—Ä–æ–∫–∞ 5.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –°—Ä–∞–≤–Ω–∏—Ç–µ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task18.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ß–∞—Å—Ç–∏—Ü–∞ ÂÖ∂</title>
</head>
<body>
<h2>–ö–∞–∫–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏—è ÂÖ∂ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ù‰∏çÊàëÂÖ∂Âèó‰Ωë?</h2>
<p><strong>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚Äî –≤–æ–ø—Ä–æ—Å</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–û—Ç—Ä–∏—Ü–∞–Ω–∏–µ", correct: false },
    { text: "–ß–∞—Å—Ç–∏—Ü–∞ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è", correct: true },
    { text: "–ü—Ä—è–º–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", correct: false },
    { text: "–ü–æ–¥–ª–µ–∂–∞—â–µ–µ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ÂÖ∂ ‚Äî —á–∞—Å—Ç–∏—Ü–∞ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. ÂÖ∂ –Ω–µ –æ—Ç—Ä–∏—Ü–∞–µ—Ç, –∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task19.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–æ–¥–ª–µ–∂–∞—â–µ–µ</title>
</head>
<body>
<h2>–ö—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–ª–µ–∂–∞—â–∏–º –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ù‰∏çÊàëÈôçÁÜØ?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Êàë", correct: false },
    { text: "Â∏ù", correct: true },
    { text: "ÁÜØ", correct: false },
    { text: "‰∏ç", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –ü–æ–¥–ª–µ–∂–∞—â–µ–µ ‚Äî Â∏ù.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ö—Ç–æ –Ω–µ –ø–æ—Å—ã–ª–∞–µ—Ç –∑–Ω–æ–π?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task20.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –õ–µ–∫—Å–∏–∫–∞</title>
</head>
<body>
<h2>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂÖπ –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ ÂÖπÈÇë?</h2>
<p><strong>–ü–æ–¥—Å–∫–∞–∑–∫–∞: —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–¢–æ—Ç", correct: false },
    { text: "–≠—Ç–æ—Ç", correct: true },
    { text: "–ö–∞–∂–¥—ã–π", correct: false },
    { text: "–ù–µ–∫–æ—Ç–æ—Ä—ã–π", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ÂÖπ ‚Äî "—ç—Ç–æ—Ç".';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –í—Å–ø–æ–º–Ω–∏—Ç–µ, –∫–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è ÂÖπÈÇë.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task21.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –°–∏–Ω—Ç–∞–∫—Å–∏—Å</title>
</head>
<body>
<h2>–ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∫–æ—Å–≤–µ–Ω–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ Â∏ùÂèóÊàëÂπ¥?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–ü–µ—Ä–µ–¥ —Å–∫–∞–∑—É–µ–º—ã–º", correct: false },
    { text: "–ü–æ—Å–ª–µ —Å–∫–∞–∑—É–µ–º–æ–≥–æ", correct: true },
    { text: "–í –Ω–∞—á–∞–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", correct: false },
    { text: "–ù–µ –≤—ã—Ä–∞–∂–µ–Ω–æ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Êàë —Å—Ç–æ–∏—Ç –ø–æ—Å–ª–µ Âèó ‚Äî –∫–æ—Å–≤–µ–Ω–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ì–¥–µ —Å—Ç–æ–∏—Ç Êàë?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task22.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ò–Ω–≤–µ—Ä—Å–∏—è</title>
</head>
<body>
<h2>–ö–∞–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω–≤–µ—Ä—Å–∏—é –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Â∏ùÂèóÊàëÂπ¥", correct: false },
    { text: "Â∏ù‰∏çÊàëÂèóÂπ¥", correct: true },
    { text: "ÊàëÂèóÂπ¥", correct: false },
    { text: "Âπ¥ÂèóÊàë", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> ‰∏çÊàëÂèóÂπ¥ ‚Äî –∏–Ω–≤–µ—Ä—Å–∏—è.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ì–¥–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –≥–ª–∞–≥–æ–ª–æ–º?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task23.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ü–µ—Ä–µ–≤–æ–¥</title>
</head>
<body>
<h2>–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ: "–ù–µ–±–µ—Å–∞ –ø–æ—Å—ã–ª–∞—é—Ç –Ω–∞–º —É—Ä–æ–∂–∞–π"</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Â∏ùÂèóÊàëÂπ¥", correct: true },
    { text: "ÊàëÂèóÂ∏ùÂπ¥", correct: false },
    { text: "Âπ¥ÂèóÊàëÂ∏ù", correct: false },
    { text: "Â∏ùÂπ¥ÂèóÊàë", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –£—Ä–æ–∫–∞ 5.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ö—Ç–æ –∫–æ–º—É —á—Ç–æ –ø–æ—Å—ã–ª–∞–µ—Ç?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task24.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞</title>
</head>
<body>
<h2>–ö–∞–∫–æ–π –≥–ª–∞–≥–æ–ª –ù–ï —Ç—Ä–µ–±—É–µ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "Âèó", correct: false },
    { text: "‰Ωú", correct: false },
    { text: "Èôç", correct: false },
    { text: "Êúâ", correct: true }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> Êúâ ‚Äî "–∏–º–µ—Ç—å", –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∫–æ—Å–≤–µ–Ω–Ω–æ–≥–æ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ö–∞–∫–æ–π –≥–ª–∞–≥–æ–ª –≤—ã—Ä–∞–∂–∞–µ—Ç "–∏–º–µ—Ç—å"?';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>

=== üìÑ task25.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <link rel="stylesheet" href="../../tasks.css">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ó–∞–¥–∞–Ω–∏–µ: –û–±–æ–±—â–µ–Ω–∏–µ</title>
</head>
<body>
<h2>–ß—Ç–æ –æ–±—â–µ–≥–æ —É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π Â∏ù‰∏çÊàëÈôçÁÜØ –∏ Â∏ù‰∏çÊàëÂèó‰Ωë?</h2>
<p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</strong></p>
<div id="answers"></div>
<button onclick="check('answers', 'result', options)">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<p id="result"></p>
<script>
  const options = [
    { text: "–û–±–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–Ω–≤–µ—Ä—Å–∏—é –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å ‰∏ç", correct: true },
    { text: "–û–±–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç Âºó", correct: false },
    { text: "–û–±–∞ ‚Äî –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω—ã–µ", correct: false },
    { text: "–û–±–∞ ‚Äî –ø–∞—Å—Å–∏–≤–Ω—ã–µ", correct: false }
  ];
  
  function shuffle(array) {
    const arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }
  
  function renderOptions() {
    const shuffled = shuffle(options);
    const container = document.getElementById("answers");
    if (!container) return;
    
    container.innerHTML = "";
    shuffled.forEach((opt, index) => {
      const label = document.createElement("label");
      const input = document.createElement("input");
      input.type = "radio";
      input.name = "q";
      input.value = index;
      input.dataset.correct = opt.correct;
      label.appendChild(input);
      label.appendChild(document.createTextNode(opt.text));
      container.appendChild(label);
    });
  }
  
  function getSelectedValue(elementId) {
    return document.querySelector(`#${elementId} input:checked`)?.dataset.correct || '';
  }
  
  function check(answersId, resultId, options) {
    const resultEl = document.getElementById(resultId);
    const selected = getSelectedValue(answersId);
    
    if (!selected) {
      resultEl.innerHTML = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';
      return;
    }
    
    if (selected === 'true') {
      resultEl.innerHTML = '‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –û–±–∞ ‚Äî –ø—Ä–∏–º–µ—Ä—ã –∏–Ω–≤–µ—Ä—Å–∏–∏ —Å ‰∏ç.';
    } else {
      resultEl.innerHTML = '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –°—Ä–∞–≤–Ω–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.';
    }
  }
  
  window.onload = renderOptions;
  window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>