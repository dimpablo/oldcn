=== üìÑ Duolingo style menu.html ===
<html lang="zh"><head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Âè§Ê±âËØ≠‰πãÈÅì ‚Äî –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏–Ω—É—Å–æ–∏–¥–∞</title>
  <style>
    :root {
      --color-primary: 97, 196, 255;
      --color-theory: 66, 133, 244;
      --color-hanzi: 255, 140, 0;
      --color-practice: 122, 199, 12;
      --color-bg: 255, 253, 240;
      --color-line: 220, 210, 190;
      --color-text: 60, 50, 40;
      --unit-size: 60px;
      --gap-unit: 80px;
      --amplitude: 140px;
      --wavelength: 8;
      --font-ui: 'Segoe UI', sans-serif;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      background: rgb(var(--color-bg));
      color: rgb(var(--color-text));
      font-family: var(--font-ui);
      overflow-x: hidden;
      position: relative;
    }

    /* --- –ù–∞–≤–∏–≥–∞—Ü–∏—è --- */
    .lingo-nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.2rem 1.5rem;
      background: white;
      border-bottom: 1px solid #e0d8c8;
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .lingo-logo {
      font-weight: bold;
      font-size: 1.6rem;
      color: rgb(var(--color-primary));
    }

    .lingo-stats {
      display: flex;
      gap: 1rem;
      font-size: 0.9rem;
    }

    .lingo-stat {
      background: white;
      padding: 0.4rem 0.8rem;
      border-radius: 20px;
      box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);
      font-weight: 600;
    }

    /* --- –ü—Ä–æ–≥—Ä–µ—Å—Å --- */
    .lingo-progress {
      padding: 1rem 1.5rem;
      background: white;
      text-align: center;
      font-size: 0.95rem;
      color: #777;
      border-bottom: 1px solid #eee;
    }

    /* --- –°–µ–∫—Ü–∏—è --- */
    .ancient-section {
      max-width: 900px;
      margin: 2rem auto;
      padding: 0 1.5rem;
      position: relative;
      background-color: whitesmoke;
    }

    .section-title {
      text-align: center;
      font-size: 1.6rem;
      color: rgb(var(--color-primary));
      font-weight: 700;
      margin-bottom: 0.5rem;
    }

    .section-era {
      text-align: center;
      font-size: 1.1rem;
      color: #888;
      margin-bottom: 2rem;
    }

    /* --- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è --- */
    .path-track {
      position: absolute;
      left: 50%;
      top: 0;
      width: 2px;
      height: 100%;
      background: rgb(var(--color-line));
      transform: translateX(-50%);
      z-index: 1;
    }

    /* --- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —é–Ω–∏—Ç–∞ --- */
    .unit-wrapper {
      position: absolute;
      left: 50%; /* –í—Å–µ–≥–¥–∞ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ */
      top: 0;
      transform: translateX(0); /* –ë—É–¥–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è —á–µ—Ä–µ–∑ JS */
      text-align: center;
      width: auto; /* –í–∞–∂–Ω–æ: –Ω–µ 100% */
    }

    /* --- –Æ–Ω–∏—Ç (–∫—Ä—É–∂–æ—á–µ–∫) --- */
    .unit-node {
      position: relative;
      width: var(--unit-size);
      height: var(--unit-size);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      color: white;
      box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
      z-index: 2;
      font-size: 0.9em;
      cursor: pointer;
    }

    .unit-node.theory { background: rgb(var(--color-theory)); }
    .unit-node.hanzi  { background: rgb(var(--color-hanzi)); }
    .unit-node.practice { background: rgb(var(--color-practice)); }

    /* --- –ü–æ–¥–ø–∏—Å—å --- */
    .unit-label {
      margin-top: 8px;
      font-size: 0.8rem;
      color: #666;
    }

    /* --- –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å --- */
    @media (max-width: 768px) {
      :root {
        --amplitude: 80px;
      }
    }
  </style>
</head>
<body>

  <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è -->
  <header class="lingo-nav">
    <div class="lingo-logo">Âè§Ê±âËØ≠‰πãÈÅì</div>
    <div class="lingo-stats">
      <span class="lingo-stat">üî• 42 –¥–Ω—è</span>
      <span class="lingo-stat">üí∞ 1875 XP</span>
    </div>
  </header>



  <!-- –°–µ–∫—Ü–∏—è -->
  <div class="ancient-section">
    <h1 class="section-title">–ê—Ä—Ö–∞–∏—á–µ—Å–∫–∏–π –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫</h1>
    <p class="section-era">–û—Ä–∞–∫—É–ª—å–Ω—ã–µ –Ω–∞–¥–ø–∏—Å–∏ –¥–∏–Ω–∞—Å—Ç–∏–∏ –®–∞–Ω</p>



    <!-- –Æ–Ω–∏—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ JS -->
  <div class="unit-wrapper" style="top: 100px; transform: translateX(0px);"><div class="unit-node theory">üìñ</div><div class="unit-label"><br>–ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç!</div></div><div class="unit-wrapper" style="top: 180px; transform: translateX(98.995px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 260px; transform: translateX(140px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 340px; transform: translateX(98.995px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 420px; transform: translateX(1.71451e-14px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 500px; transform: translateX(-98.995px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 580px; transform: translateX(-140px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 660px; transform: translateX(-98.995px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 740px; transform: translateX(-3.42901e-14px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 820px; transform: translateX(98.995px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 900px; transform: translateX(140px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 980px; transform: translateX(98.995px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 1060px; transform: translateX(5.14352e-14px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 1140px; transform: translateX(-98.995px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 1220px; transform: translateX(-140px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 1300px; transform: translateX(-98.995px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 1380px; transform: translateX(-6.85802e-14px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 1460px; transform: translateX(98.995px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 1540px; transform: translateX(140px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 1620px; transform: translateX(98.995px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 1700px; transform: translateX(8.57253e-14px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 1780px; transform: translateX(-98.995px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 1860px; transform: translateX(-140px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 1940px; transform: translateX(-98.995px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 2020px; transform: translateX(-1.0287e-13px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 2100px; transform: translateX(98.995px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 2180px; transform: translateX(140px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div><div class="unit-wrapper" style="top: 2260px; transform: translateX(98.995px);"><div class="unit-node theory">üìñ</div><div class="unit-label">–¢–µ–æ—Ä–∏—è</div></div><div class="unit-wrapper" style="top: 2340px; transform: translateX(1.20015e-13px);"><div class="unit-node hanzi">üñåÔ∏è</div><div class="unit-label">Hanzi</div></div><div class="unit-wrapper" style="top: 2420px; transform: translateX(-98.995px);"><div class="unit-node practice">‚úçÔ∏è</div><div class="unit-label">–ü—Ä–∞–∫—Ç–∏–∫–∞</div></div></div>

  <script>
    const container = document.querySelector('.ancient-section');
    const totalLessons = 10;
    const unitsPerLesson = 3;
    const totalUnits = totalLessons * unitsPerLesson;
    const startTop = 100;
    const unitGap = 80;

    const amplitude = 140;
    const wavelength = 8; // –≤ —é–Ω–∏—Ç–∞—Ö

    for (let lesson = 0; lesson < totalLessons; lesson++) {
      for (let unit = 0; unit < unitsPerLesson; unit++) {
        const unitIndex = lesson * unitsPerLesson + unit;
        const topPosition = startTop + unitIndex * unitGap;

        // –°–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ
        const angle = (unitIndex / wavelength) * 2 * Math.PI;
        const offsetX = Math.sin(angle) * amplitude; // –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç -140 –¥–æ +140

        // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const wrapper = document.createElement('div');
        wrapper.className = 'unit-wrapper';
        wrapper.style.top = `${topPosition}px`;
        wrapper.style.transform = `translateX(${offsetX}px)`; // —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø
        let unitType, icon, label;
        if (unit === 0) {
          unitType = 'theory';
          icon = 'üìñ';
          label = '–¢–µ–æ—Ä–∏—è';
        } else if (unit === 1) {
          unitType = 'hanzi';
          icon = 'üñåÔ∏è';
          label = 'Hanzi';
        } else {
          unitType = 'practice';
          icon = '‚úçÔ∏è';
          label = '–ü—Ä–∞–∫—Ç–∏–∫–∞';
        }

        // –ö—Ä—É–∂–æ—á–µ–∫
        const unitNode = document.createElement('div');
        unitNode.className = `unit-node ${unitType}`;
        unitNode.innerHTML = icon;

        // –ü–æ–¥–ø–∏—Å—å
        const unitLabel = document.createElement('div');
        unitLabel.className = 'unit-label';
        unitLabel.textContent = label;

        // –°–æ–±–∏—Ä–∞–µ–º
        wrapper.appendChild(unitNode);
        wrapper.appendChild(unitLabel);
        container.appendChild(wrapper);
      }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
    document.querySelectorAll('.unit-node').forEach(unit => {
      unit.addEventListener('click', () => {
        const types = { 'üìñ': '–¢–µ–æ—Ä–∏—è', 'üñåÔ∏è': 'Hanzi', '‚úçÔ∏è': '–ü—Ä–∞–∫—Ç–∏–∫–∞' };
        const type = types[unit.textContent.trim()];
        alert(`–û—Ç–∫—Ä—ã–≤–∞–µ–º: ${type}`);
      });
    });
  </script>


</body></html>-e 

=== üìÑ index.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
  <title>–ö—É—Ä—Å: –î—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–∏–µ –æ—Ä–∞–∫—É–ª—å–Ω—ã–µ –Ω–∞–¥–ø–∏—Å–∏</title>
  <style>
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: #f8f9fa;
  color: #333;
  height: 100vh;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  padding: 10px;
  gap: 8px; /* –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ */
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 16px;
  color: #555;
  flex-shrink: 0;
}

.scale-controls {
  display: flex;
  align-items: center;
  gap: 8px;
}

.scale-btn {
  width: 28px;
  height: 28px;
  font-size: 18px;
  line-height: 28px;
  text-align: center;
  background-color: #e0e0e0;
  border-radius: 50%;
  cursor: pointer;
  user-select: none;
}

.scale-value {
  min-width: 36px;
  text-align: center;
  font-weight: bold;
}

#progress-container {
  width: 100%;
  height: 6px;
  background-color: #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
  flex-shrink: 0;
}

#progress-bar {
  height: 100%;
  width: 0%;
  background-color: #4caf50;
  transition: width 0.4s ease;
  border-radius: 3px;
}

#task-container {
  flex: 1; /* –ó–∞–Ω–∏–º–∞–µ—Ç –í–°–Å –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ */
  border: none;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease;
  min-height: 0; /* –Ω–∞ —Å–ª—É—á–∞–π —Å–∂–∞—Ç–∏—è */
}

#task-container.active {
  opacity: 1;
  visibility: visible;
}

#task-frame {
  width: 100%;
  height: 100%;
  border: none;
  transform-origin: top left;
  transform: scale(1);
  transition: transform 0.2s ease;
}

.controls {
  padding: 12px 0;
  display: flex;
  justify-content: center;
  flex-shrink: 0; /* –ù–µ —Å–∂–∏–º–∞–µ—Ç—Å—è! */
}

#next-btn {
  padding: 14px 24px;
  font-size: 18px;
  font-weight: 600;
  color: white;
  background-color: #1976d2;
  border: none;
  border-radius: 12px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.1s ease;
  width: 90%;
  max-width: 300px;
}

#next-btn:active {
  transform: scale(0.98);
}

#next-btn:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
  transform: none;
}

.hidden-iframe {
  position: absolute;
  top: -9999px;
  left: -9999px;
  width: 1px;
  height: 1px;
  border: none;
}

#status {
  font-size: 16px;
  text-align: center;
  color: #555;
}
  </style>
</head>
<body>
  <div class="header">
    <div id="status">üîç –ü–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–∏–π...</div>
    <div class="scale-controls">
      <div class="scale-btn" id="zoom-out">‚àí</div>
      <div class="scale-value" id="scale-value">1.0</div>
      <div class="scale-btn" id="zoom-in">+</div>
    </div>
  </div>

  <div id="progress-container">
    <div id="progress-bar"></div>
  </div>

  <!-- iframe —Å–∫—Ä—ã—Ç –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ -->
  <div id="task-container">
    <iframe id="task-frame" src="about:blank" frameborder="0" allowfullscreen></iframe>
  </div>

  <div class="controls">
    <button id="next-btn" disabled>–°–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ</button>
  </div>

  <script>
    const lessonwords = [
      '‰∏ô', 'ÂØÖ', 'Âçú', 'Áà≠', 'Ë≤û', 'Èõ®', 'Êõ∞', 'ÂÖ∂', 'Áô∏',
      '‰∫•', '‰∏ç', 'ÂÖÅ', 'Áéã', 'Âç†', '‰∏ë', 'Â∑±', 'ÂçØ', 'Áèè', 'Â£¨', 'Âçà'
    ];

    let tasks = [];
    let currentTaskIndex = 0;
    let currentScale = 1.0;
    const minScale = 0.25;
    const maxScale = 2.0;
    const scaleStep = 0.1;

    const iframe = document.getElementById("task-frame");
    const statusEl = document.getElementById("status");
    const nextBtn = document.getElementById("next-btn");
    const progressBar = document.getElementById("progress-bar");
    const scaleValueEl = document.getElementById("scale-value");
    const zoomInBtn = document.getElementById("zoom-in");
    const zoomOutBtn = document.getElementById("zoom-out");

    let hasProcessedHanzi = false;
    let discoveryCompleted = false;

    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    function checkTaskIsValid(n) {
  return new Promise((resolve) => {
    const filename = `task${n}.html`;
    const frame = document.createElement("iframe");
    frame.classList.add("hidden-iframe");
    frame.setAttribute("data-check", n);

    let responded = false;
    let timeoutId;

    function onMessage(event) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–∞—à–µ–≥–æ —Ñ—Ä–µ–π–º–∞
      const frameN = parseInt(frame.getAttribute("data-check"));
      if (event.data.type === "TASK_EXISTS" && event.data.valid) {
        if (!responded && frameN === n) {
          responded = true;
          clearTimeout(timeoutId);
          document.body.removeChild(frame);
          window.removeEventListener("message", onMessage);
          resolve({ exists: true, n });
        }
      }
    }

    window.addEventListener("message", onMessage);

    timeoutId = setTimeout(() => {
      if (!responded) {
        document.body.removeChild(frame);
        window.removeEventListener("message", onMessage);
        resolve({ exists: false, n });
      }
    }, 3000);

    frame.onload = () => {
      try {
        // –ï—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∑–∞–ª 404 (–≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–∞—Ö)
        if (frame.contentDocument && frame.contentDocument.title === "404 Not Found") {
          if (!responded) {
            clearTimeout(timeoutId);
            document.body.removeChild(frame);
            window.removeEventListener("message", onMessage);
            resolve({ exists: false, n });
          }
        }
      } catch (e) {
        // –î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –æ—à–∏–±–∫–∞, –Ω–æ –Ω–µ 404
      }
    };

    frame.onerror = () => {
      if (!responded) {
        clearTimeout(timeoutId);
        document.body.removeChild(frame);
        window.removeEventListener("message", onMessage);
        resolve({ exists: false, n });
      }
    };

    frame.src = filename + "?_=" + Date.now();
    document.body.appendChild(frame);
  });
}

    async function discoverTasks() {
      const existingTasks = [];
      let n = 1;

      statusEl.textContent = "üîç –ò—â–µ–º –∑–∞–¥–∞–Ω–∏—è...";

      while (true) {
        const result = await checkTaskIsValid(n);

        if (result.exists) {
          existingTasks.push(`task${n}.html`);
          n++;
        } else {
          break;
        }

        if (n > 200) break;
      }

      if (existingTasks.length === 0) {
        statusEl.innerHTML = `
          ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ <strong>–Ω–∞—Å—Ç–æ—è—â–µ–≥–æ</strong> –∑–∞–¥–∞–Ω–∏—è.<br>
          –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–∞–∂–¥—ã–π <code>taskN.html</code> –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:<br>
          <code>window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");</code>
        `;
        return;
      }

      tasks = shuffleArray(existingTasks);
      discoveryCompleted = true;
      statusEl.textContent = `‚úÖ –ù–∞–π–¥–µ–Ω–æ ${tasks.length} –∑–∞–¥–∞–Ω–∏–π.`;
      updateProgress();

      // üîì –ü–æ–∫–∞–∑—ã–≤–∞–µ–º iframe —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞
      document.getElementById("task-container").classList.add("active");

      // –ê–≤—Ç–æ–º–∞—Å—à—Ç–∞–± –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
      if (isMobile()) {
        setScale(0.5);
      }

      loadTask(0);
    }

    function loadTask(index) {
  if (index >= tasks.length) {
    // –°–∫—Ä—ã—Ç—å iframe
    iframe.style.display = "none";
    nextBtn.disabled = true;

    // –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å
    statusEl.innerHTML = `<div style="text-align: center;">
      <h2>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
      <p>–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫<br><strong>–î—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–∏–µ –æ—Ä–∞–∫—É–ª—å–Ω—ã–µ –Ω–∞–¥–ø–∏—Å–∏</strong>!</p>
      <div id="fireworks" style="width: 100%; height: 200px; position: relative; background: #0000; border-radius: 8px; margin: 10px 0;"></div>
    </div>`;

    // –î–æ–±–∞–≤–∏—Ç—å —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∏ (–ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
    createFireworks();

    // –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ ‚Äî —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ ../
    setTimeout(() => {
      window.location.href = "../";
    }, 5000);

    updateProgress();
    return;
  }

  hasProcessedHanzi = false;
  const url = tasks[index] + "?_=" + Date.now();
  console.log(`‚ñ∂Ô∏è –ó–∞–≥—Ä—É–∑–∫–∞: ${url}`);
  iframe.src = url;

  updateProgress();
  nextBtn.disabled = true;
  currentTaskIndex = index;
}

    function updateProgress() {
      const progress = tasks.length > 0 ? (currentTaskIndex / tasks.length) * 100 : 0;
      progressBar.style.width = `${progress}%`;
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–æ–º
    function setScale(scale) {
      currentScale = scale;
      iframe.style.transform = `scale(${currentScale})`;
      scaleValueEl.textContent = currentScale.toFixed(1);
    }

    zoomInBtn.addEventListener("click", () => {
      if (currentScale < maxScale) {
        setScale(Math.round((currentScale + scaleStep) * 10) / 10);
      }
    });

    zoomOutBtn.addEventListener("click", () => {
      if (currentScale > minScale) {
        setScale(Math.round((currentScale - scaleStep) * 10) / 10);
      }
    });

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    function isMobile() {
      return window.innerWidth <= 768 || (navigator.maxTouchPoints && navigator.maxTouchPoints > 1);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç iframe
    window.addEventListener("message", (event) => {
      const { type, success } = event.data;

      if (type === "DO_HANZI" && !hasProcessedHanzi && discoveryCompleted) {
        hasProcessedHanzi = true;

        const randomChar = lessonwords[Math.floor(Math.random() * lessonwords.length)];
        const newSrc = `${tasks[currentTaskIndex]}?_=${Date.now()}#${randomChar}`;

        console.log(`üé® DO_HANZI: –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å #${randomChar}`);

        iframe.src = '';
        setTimeout(() => {
          iframe.src = newSrc;
        }, 10);

        nextBtn.disabled = true;
        return;
      }

      if (type === "TASK_RESULT") {
        if (success) {
          statusEl.textContent = "‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!";
          nextBtn.disabled = false;
        } else {
          statusEl.textContent = "‚è≥ –ó–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...";
        }
      }
    });

    nextBtn.addEventListener("click", () => {
      currentTaskIndex++;
      loadTask(currentTaskIndex);
    });

    // –ó–∞–ø—É—Å–∫
    discoverTasks();
      function createFireworks() {
  const container = document.getElementById("fireworks");
  const colors = ["#FF0000", "#00FF00", "#0000FF", "#FFFF00", "#FF00FF", "#00FFFF", "#FFA500", "#FFFFFF"];
  const particles = 50;

  function createExplosion(x, y) {
    for (let i = 0; i < particles; i++) {
      const particle = document.createElement("div");
      const angle = Math.random() * Math.PI * 2;
      const speed = 1 + Math.random() * 3;
      const size = 2 + Math.random() * 4;

      particle.style.position = "absolute";
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
      particle.style.borderRadius = "50%";
      particle.style.boxShadow = "0 0 6px currentColor";
      particle.style.left = `${x}px`;
      particle.style.top = `${y}px`;
      particle.style.pointerEvents = "none";

      container.appendChild(particle);

      // –ê–Ω–∏–º–∞—Ü–∏—è
      let dx = Math.cos(angle) * speed;
      let dy = Math.sin(angle) * speed;
      let opacity = 1;
      let posX = x;
      let posY = y;

      const animate = () => {
        opacity -= 0.02;
        posX += dx;
        posY += dy + 0.1; // –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è
        dy += 0.05;

        particle.style.opacity = opacity;
        particle.style.left = `${posX}px`;
        particle.style.top = `${posY}px`;

        if (opacity > 0) {
          requestAnimationFrame(animate);
        } else {
          container.removeChild(particle);
        }
      };

      requestAnimationFrame(animate);
    }
  }

  // –ó–∞–ø—É—Å–∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∑—Ä—ã–≤–æ–≤
  setInterval(() => {
    const x = 50 + Math.random() * (container.offsetWidth - 100);
    const y = 100 + Math.random() * (container.offsetHeight - 100);
    createExplosion(x, y);
  }, 400);
}
  </script>
</body>
</html>-e 

=== üìÑ task1.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ó–∞–¥–∞–Ω–∏–µ 1: –†–∏—Å–æ–≤–∞–Ω–∏–µ</title>
  <script src="https://cdn.jsdelivr.net/npm/hanzi-writer@3.5/dist/hanzi-writer.min.js"></script>
  <script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>
</head>
<body>

<div id="character-target-div"></div>

<script>
  // ‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  function sendResult(success, message) {
    window.parent.postMessage({
      type: "TASK_RESULT",
      success: !!success,
      message: message || (success ? "–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ" : "–û—à–∏–±–∫–∞")
    }, "*");
  }

  window.onload = function() {
    const char = window.location.hash.slice(1);
    
    if (!char) {
      console.warn("‚ö†Ô∏è –ù–µ —É–∫–∞–∑–∞–Ω –∏–µ—Ä–æ–≥–ª–∏—Ñ –≤ —Ö—ç—à–µ");
      sendResult(false, "–ù–µ —É–∫–∞–∑–∞–Ω –∏–µ—Ä–æ–≥–ª–∏—Ñ");
      return;
    }

    const writer = HanziWriter.create('character-target-div', char, {
      width: 300,
      height: 300,
      showCharacter: false,
      showOutline: false,
      showHintAfterMisses: 1,
      highlightOnComplete: false,
      padding: 5
    });

    writer.quiz({
      onComplete: function(summaryData) {
        console.log("üéØ –ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω:", summaryData);
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É: –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ 100% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
        sendResult(true, "–ò–µ—Ä–æ–≥–ª–∏—Ñ –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω –≤–µ—Ä–Ω–æ");
      },
      onIncorrectStroke: function(strokeData) {
        // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      }
    });
  };
</script>

<!-- –°–∏–≥–Ω–∞–ª: —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ -->
<script>
  window.parent.postMessage({
    type: "TASK_EXISTS",
    valid: true
  }, "*");
</script>

<!-- –°–∏–≥–Ω–∞–ª: —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —Å hanziwriter -->
<script>
  window.parent.postMessage({
    type: "DO_HANZI",
    valid: true
  }, "*");
</script>

</body>
</html>-e 

=== üìÑ task10.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –∑–Ω–∞—á–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "‰∏ë", meaning: "–ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (2-—è)" },
  { char: "Áà≠", meaning: "–ß–∂—ç–Ω (–∏–º—è —Å–æ–±—Å—Ç–≤.)" },
  { char: "Èõ®", meaning: "–î–æ–∂–¥—å / –î–æ–∂–¥—å –∏–¥–µ—Ç / –î–æ–∂–¥–∏—Ç—å" },
  { char: "ÂÖÅ", meaning: "–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ!" },
  { char: "‰∫•", meaning: "–ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (12-—è)" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task11.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –∑–Ω–∞—á–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "ÂØÖ", meaning: "–ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (3-—è)" },
  { char: "Áô∏", meaning: "–ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (10-–π)" },
  { char: "ÂçØ", meaning: "–ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (4-—è)" },
  { char: "Áèè", meaning: "–¶–∑—é—ç (–ò–º—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ)" },
  { char: "Âçà", meaning: "–ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (7-—è)" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task12.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "Âçà", meaning: "w«î" },
  { char: "ÂÖ∂", meaning: "q√≠" },
  { char: "Áèè", meaning: "ju√©" },
  { char: "‰∏ô", meaning: "b«êng" },
  { char: "‰∏ç", meaning: "b√π" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task13.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "Âç†", meaning: "zhƒÅn" },
  { char: "‰∫•", meaning: "h√†i" },
  { char: "Â£¨", meaning: "r√©n" },
  { char: "Èõ®", meaning: "y«î" },
  { char: "ÂØÖ", meaning: "y√≠n" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task14.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "Êõ∞", meaning: "yuƒì" },
  { char: "ÂÖÅ", meaning: "y«în" },
  { char: "Áô∏", meaning: "gu«ê" },
  { char: "Â∑±", meaning: "j«ê" },
  { char: "Ë≤û", meaning: "zhƒìn" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task15.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ö–∞–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚Äî –±–µ–∑–ª–∏—á–Ω—ã–µ?</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
    }
    h2 {
      text-align: center;
      color: #333;
      margin-bottom: 20px;
    }
    .instruction {
      text-align: center;
      margin-bottom: 25px;
      color: #555;
      font-style: italic;
    }
    #options-container {
      margin: 20px 0;
    }
    .option {
      display: block;
      margin: 10px 0;
      padding: 12px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 6px;
      cursor: pointer;
      transition: background 0.2s, border-color 0.2s;
    }
    .option:hover {
      background: #f0f8ff;
      border-color: #007cba;
    }
    .option.checked {
      background: #e1f3ff;
      border-color: #007cba;
    }
    .option input {
      margin-right: 10px;
      vertical-align: middle;
    }
    button {
      display: block;
      margin: 25px auto;
      padding: 12px 20px;
      font-size: 16px;
      background: #007cba;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    button:hover {
      background: #005a87;
    }
    #result {
      margin-top: 20px;
      padding: 15px;
      text-align: center;
      font-weight: bold;
      border-radius: 5px;
    }
    .success {
      background: #d4edda;
      color: #155724;
    }
    .error {
      background: #f8d7da;
      color: #721c24;
    }
  </style>
</head>
<body>

  <h2>–ö–∞–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚Äî –±–µ–∑–ª–∏—á–Ω—ã–µ?</h2>
  <p class="instruction">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –ø–æ–¥–ª–µ–∂–∞—â–µ–≥–æ ‚Äî —Ç–æ –µ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Å–∞–º–∏ –ø–æ —Å–µ–±–µ (—á–∞—â–µ –≤—Å–µ–≥–æ ‚Äî –æ –ø–æ–≥–æ–¥–µ, —Å—É–¥—å–±–µ –∏ —Ç.–ø.).</p>

  <div id="options-container">
    <!-- –í–∞—Ä–∏–∞–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
  </div>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: —Ç–µ–∫—Å—Ç, id (–¥–ª—è –ª–æ–≥–∏–∫–∏), –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (true = –±–µ–∑–ª–∏—á–Ω–æ–µ)
    const items = [
      { id: "yu", text: "Èõ®", isImpersonal: true },
      { id: "qi-yu", text: "ÂÖ∂Èõ®", isImpersonal: true },
      { id: "wang-zhan-yue", text: "ÁéãÂç†Êõ∞", isImpersonal: false },
      { id: "bu-yu", text: "‰∏çÈõ®", isImpersonal: true },
      { id: "yun-yu", text: "ÂÖÅÈõ®", isImpersonal: true }
    ];

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è (–§–∏—à–µ—Ä-–ô–µ–π—Ç—Å)
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –•—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    const userSelections = {};

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤
    function renderOptions() {
      const container = document.getElementById("options-container");
      container.innerHTML = ""; // üî¥ –û—á–∏—â–∞–µ–º

      const shuffled = shuffleArray(items);

      shuffled.forEach(item => {
        const label = document.createElement("label");
        label.className = "option";
        label.dataset.id = item.id;

        const checkbox = document.createElement("input");
        checkbox.type = "checkbox";
        checkbox.id = `chk-${item.id}`; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π id
        checkbox.checked = false;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        checkbox.onchange = () => {
          userSelections[item.id] = checkbox.checked;
          if (checkbox.checked) {
            label.classList.add("checked");
          } else {
            label.classList.remove("checked");
          }
        };

        const textNode = document.createTextNode(item.text);

        label.appendChild(checkbox);
        label.appendChild(textNode);
        container.appendChild(label);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–±–æ—Ä
        userSelections[item.id] = false;
      });
    }

    function check() {
      const resultEl = document.getElementById("result");
      resultEl.className = "";

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç
      const allCorrect = items.every(item => {
        const expected = item.isImpersonal;
        const actual = !!userSelections[item.id];
        return expected === actual;
      });

      if (allCorrect) {
        resultEl.textContent = "‚úÖ –í–µ—Ä–Ω–æ! –ë–µ–∑–ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚Äî —Ç–µ, –≥–¥–µ –Ω–µ—Ç –¥–µ—è—Ç–µ–ª—è: –ø–æ–≥–æ–¥–∞, —Å—É–¥—å–±–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.";
        resultEl.className = "success";
        sendResult(true);
      } else {
        resultEl.textContent = "‚ùå –ü–æ–¥—É–º–∞–π—Ç–µ: ÁéãÂç†Êõ∞ ‚Äî —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Å—É–±—ä–µ–∫—Ç–∞ (–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç), –∑–Ω–∞—á–∏—Ç ‚Äî –Ω–µ –±–µ–∑–ª–∏—á–Ω–æ–µ.";
        resultEl.className = "error";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –±–µ–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í–µ—Ä–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –±–µ–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º—ã" : "–û—à–∏–±–∫–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –±–µ–∑–ª–∏—á–Ω–æ—Å—Ç–∏")
      }, "*");
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    renderOptions();

    // –°–∏–≥–Ω–∞–ª —Ä–æ–¥–∏—Ç–µ–ª—é
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task16.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂçúÁà≠?</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
    }
    h2 {
      text-align: center;
      color: #333;
      margin-bottom: 20px;
    }
    .instruction {
      text-align: center;
      margin-bottom: 25px;
      color: #555;
      font-style: italic;
    }
    #options-container {
      margin: 20px 0;
    }
    .option {
      display: block;
      margin: 12px 0;
      padding: 14px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 6px;
      cursor: pointer;
      transition: background 0.2s, border-color 0.2s;
    }
    .option:hover {
      background: #f0f8ff;
      border-color: #007cba;
    }
    .option.selected {
      background: #e1f3ff;
      border-color: #007cba;
      box-shadow: 0 0 0 2px #b3d7ff;
    }
    .option input {
      margin-right: 10px;
      vertical-align: middle;
    }
    button {
      display: block;
      margin: 25px auto;
      padding: 12px 20px;
      font-size: 16px;
      background: #007cba;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    button:hover {
      background: #005a87;
    }
    #result {
      margin-top: 20px;
      padding: 15px;
      text-align: center;
      font-weight: bold;
      border-radius: 5px;
    }
    .success {
      background: #d4edda;
      color: #155724;
    }
    .error {
      background: #f8d7da;
      color: #721c24;
    }
  </style>
</head>
<body>

  <h2>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂçúÁà≠?</h2>
  <p class="instruction">–í –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å—è—Ö –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ–Ω–∞ –≥–∞–¥–∞—Ç–µ–ª–µ–π –∑–∞–ø–∏—Å–∞–Ω—ã —á–µ—Ä–µ–∑ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤. –ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂçúÁà≠?</p>

  <div id="options-container">
    <!-- –í–∞—Ä–∏–∞–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å -->
  </div>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –í–∞—Ä–∏–∞–Ω—Ç—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ
    const options = [
      { value: "wang", text: "–ì–∞–¥–∞—Ç–µ–ª—å –ø–æ –∏–º–µ–Ω–∏ –í–∞–Ω", correct: false },
      { value: "zheng", text: "–ì–∞–¥–∞—Ç–µ–ª—å –ø–æ –∏–º–µ–Ω–∏ –ß–∂—ç–Ω", correct: true },
      { value: "ruler-zheng", text: "–ü—Ä–∞–≤–∏—Ç–µ–ª—å –ß–∂—ç–Ω", correct: false },
      { value: "repeat", text: "–°–ª–æ–≤–æ ¬´–≥–∞–¥–∞—Ç—å¬ª –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è", correct: false }
    ];

    let selectedValue = null;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ (–§–∏—à–µ—Ä-–ô–µ–π—Ç—Å)
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    function renderOptions() {
      const container = document.getElementById("options-container");
      container.innerHTML = ""; // üî¥ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—á–∏—â–∞–µ–º
      selectedValue = null;

      const shuffled = shuffleArray(options);

      shuffled.forEach(option => {
        const label = document.createElement("label");
        label.className = "option";
        label.dataset.value = option.value;

        const input = document.createElement("input");
        input.type = "radio";
        input.name = "answer";
        input.value = option.value;

        input.onchange = () => {
          selectedValue = option.value;
          // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
          document.querySelectorAll('.option').forEach(el => el.classList.remove('selected'));
          // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π
          label.classList.add('selected');
        };

        const textNode = document.createTextNode(option.text);

        label.appendChild(input);
        label.appendChild(textNode);
        container.appendChild(label);
      });
    }

    function check() {
      const resultEl = document.getElementById("result");
      resultEl.className = "";

      if (!selectedValue) {
        resultEl.textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞.";
        resultEl.className = "error";
        return;
      }

      if (selectedValue === "zheng") {
        resultEl.textContent = "‚úÖ –í–µ—Ä–Ω–æ! ÂçúÁà≠ ‚Äî —ç—Ç–æ –≥–∞–¥–∞—Ç–µ–ª—å –ø–æ –∏–º–µ–Ω–∏ –ß–∂—ç–Ω. –ò–µ—Ä–æ–≥–ª–∏—Ñ Áà≠ –∑–¥–µ—Å—å —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ ¬´–ß–∂—ç–Ω¬ª.";
        resultEl.className = "success";
        sendResult(true);
      } else {
        resultEl.textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: Áà≠ –≤ —ç—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ ‚Äî –Ω–µ ¬´—Å–ø–æ—Ä¬ª, –∞ –∏–º—è ‚Äî –ß–∂—ç–Ω.";
        resultEl.className = "error";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∞ Áà≠");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í–µ—Ä–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω–æ ÂçúÁà≠" : "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏")
      }, "*");
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
    renderOptions();

    // –°–∏–≥–Ω–∞–ª —Ä–æ–¥–∏—Ç–µ–ª—é
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task17.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "Áéã", meaning: "w√°ng" },
  { char: "ÂçØ", meaning: "m«éo" },
  { char: "Âçú", meaning: "b«î" },
  { char: "‰∏ë", meaning: "ch«íu" },
  { char: "Áà≠", meaning: "zhƒìng" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task18.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É</title>
  <style>
    .hint-list {
  margin: 5px 0 0;
  padding-left: 20px;
  color: #7f8c8d;
  font-size: 14px;
  list-style-type: "üî∏ ";
}

.hint-list li {
  margin: 3px 0;
}
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      line-height: 1.6;
    }
    h2 {
      color: #2c3e50;
    }
    .instructions {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 16px;
    }
    .drop-area {
      min-height: 60px;
      border: 2px dashed #3498db;
      border-radius: 8px;
      padding: 10px;
      margin: 20px 0;
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      background: #eef7ff;
      font-size: 24px;
      align-items: center;
    }
    #char-pool {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin: 15px 0;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 8px;
      min-height: 60px;
      background: #f9f9f9;
    }
    .char-box {
      width: 45px;
      height: 45px;
      background: white;
      border: 1px solid #ccc;
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: grab;
      font-size: 24px;
      user-select: none;
      box-shadow: 0 1px 3px rgba(0,0,0,0.08);
      transition: all 0.2s;
    }
    .char-box:hover {
      transform: translateY(-2px);
      box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    }
    .char-box.dragging {
      opacity: 0.7;
      transform: scale(1.05);
    }
    .punctuation {
      font-size: 20px;
      color: #7f8c8d;
    }
    .controls {
      margin-top: 20px;
    }
    button {
      padding: 10px 18px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-right: 10px;
    }
    button:hover {
      background: #2980b9;
    }
    .message {
      margin-top: 15px;
      font-weight: bold;
      color: #e74c3c;
    }
    .success {
      color: #27ae60;
    }
    .hint {
      font-style: italic;
      color: #7f8c8d;
      margin-top: 5px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É</h2>

  <div class="instructions">
    <p><strong>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</strong>, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ñ—Ä–∞–∑—É:</p>
    <p><em>–ì–∞–¥–∞—Ç–µ–ª—å –ß–∂—ç–Ω —Å–∫–∞–∑–∞–ª: ¬´–ü—Ä–∞–≤–∏—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å–æ–≤¬ª.</em></p>
  </div>

  <p><strong>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã:</strong></p>
  <div id="char-pool"></div>

  <p><strong>–°–æ–±–µ—Ä–∏—Ç–µ –∑–¥–µ—Å—å:</strong></p>
  <div id="drop-area" class="drop-area">
    <!-- –°—é–¥–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—é—Ç—Å—è –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
  </div>

  <div class="controls">
    <button id="check-btn">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
    <button id="reset-btn">–°–±—Ä–æ—Å–∏—Ç—å</button>
  </div>

  <p id="result" class="message"></p>

  <script>
    // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    const expected = ['Âçú', 'Áà≠', 'Êõ∞', 'Áéã', 'ÂÖÅ', '‰∏ç', 'Ë≤û'];

    // –í—Å–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã: –Ω—É–∂–Ω—ã–µ + –æ–±–º–∞–Ω–∫–∏ (—Ç–æ–ª—å–∫–æ –∏–∑ —É—Ä–æ–∫–∞ 1)
    const allChars = [
      'Â∑±', 'ÂçØ', 'Áéã', '‰∏ç', 'Ë≤û', 'Â∑≥',
      'Áà≠', 'ÂØÖ', 'Áà≠', 'Èõ®', 'Êõ∞', 'ÂÖ∂', 
      'Áô∏', '‰∫•', 'ÂÖÅ', 'Âçú', '‰∏ë', 'Áèè', 'Â£¨', 'Âçà'
    ];

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
    const shuffledChars = [...allChars].sort(() => Math.random() - 0.5);

    const charPool = document.getElementById('char-pool');
    const dropArea = document.getElementById('drop-area');
    const checkBtn = document.getElementById('check-btn');
    const resetBtn = document.getElementById('reset-btn');
    const resultEl = document.getElementById('result');

    // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ char-pool
    shuffledChars.forEach(char => {
      const box = document.createElement('div');
      box.className = 'char-box';
      if (char === 'Ôºå') {
        box.classList.add('punctuation');
      }
      box.textContent = char;
      box.draggable = true;

      box.addEventListener('dragstart', (e) => {
        e.dataTransfer.setData('text/plain', char);
        box.classList.add('dragging');
      });

      box.addEventListener('dragend', () => {
        box.classList.remove('dragging');
      });

      charPool.appendChild(box);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop –≤ —Ü–µ–ª–µ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    dropArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropArea.style.borderColor = '#e67e22';
    });

    dropArea.addEventListener('dragleave', () => {
      dropArea.style.borderColor = '#3498db';
    });

    dropArea.addEventListener('drop', (e) => {
      e.preventDefault();
      dropArea.style.borderColor = '#3498db';

      const char = e.dataTransfer.getData('text/plain');
      const draggedBox = document.querySelector(`#char-pool .char-box[draggable="true"]:not(.removed):not([style*='display: none'])[data-text='${char}']`) ||
                        [...document.querySelectorAll('#char-pool .char-box')].find(b => b.textContent === char && b.draggable);

      if (draggedBox) {
        const clone = draggedBox.cloneNode(true);
        clone.classList.add('removed');
        clone.draggable = false;
        clone.style.cursor = 'default';

        // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –∏–∑ –ø—É–ª–∞
        draggedBox.remove();

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ drop-area
        dropArea.appendChild(clone);
      }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    checkBtn.addEventListener('click', () => {
      const current = Array.from(dropArea.children).map(el => el.textContent);
      if (arraysEqual(current, expected)) {
        resultEl.innerHTML = '‚úÖ <strong>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</strong> –≠—Ç–æ –ø–æ–¥–ª–∏–Ω–Ω–∞—è –æ—Ä–∞–∫—É–ª—å–Ω–∞—è –Ω–∞–¥–ø–∏—Å—å.<br>ÂçúÁà≠Êõ∞ÁéãÂÖÅ‰∏çË≤û = "–ì–∞–¥–∞—Ç–µ–ª—å –ß–∂—ç–Ω —Å–∫–∞–∑–∞–ª: ¬´–ü—Ä–∞–≤–∏—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å–æ–≤¬ª."';
        resultEl.className = 'message success';
        sendResult(true);
      } else {
        resultEl.textContent = '‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
        resultEl.className = 'message';
        sendResult(false, '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫');
      }
    });

    // –°–±—Ä–æ—Å
    resetBtn.addEventListener('click', () => {
      dropArea.innerHTML = '';
      resultEl.textContent = '';
      charPool.innerHTML = '';

      const shuffled = [...allChars].sort(() => Math.random() - 0.5);
      shuffled.forEach(char => {
        const box = document.createElement('div');
        box.className = 'char-box';
        if (char === 'Ôºå') {
          box.classList.add('punctuation');
        }
        box.textContent = char;
        box.draggable = true;

        box.addEventListener('dragstart', (e) => {
          e.dataTransfer.setData('text/plain', char);
          box.classList.add('dragging');
        });

        box.addEventListener('dragend', () => {
          box.classList.remove('dragging');
        });

        charPool.appendChild(box);
      });
    });

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    function arraysEqual(a, b) {
      if (a.length !== b.length) return false;
      for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success: !!success,
        message: message || (success ? "–§—Ä–∞–∑–∞ —Å–æ–±—Ä–∞–Ω–∞ –≤–µ—Ä–Ω–æ" : "–û—à–∏–±–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ")
      }, "*");
    }
  </script>
</body>
</html>

<!-- –°–∏–≥–Ω–∞–ª: —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ -->
<script>
  window.parent.postMessage({
    type: "TASK_EXISTS",
    valid: true
  }, "*");
</script>-e 

=== üìÑ task19.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –¥–µ–Ω—å Áô∏‰∏ë?</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
    }
    h2 {
      color: #2c3e50;
      text-align: center;
      margin-bottom: 20px;
    }
    .oracle-text {
      font-size: 24px;
      text-align: center;
      margin: 20px 0;
      font-weight: bold;
      letter-spacing: 1px;
    }
    .pinyin-container {
      margin: 15px 0;
      border: 1px solid #eee;
      border-radius: 8px;
      overflow: hidden;
    }
    .pinyin-toggle {
      background: #f5f5f5;
      border: none;
      padding: 8px 15px;
      width: 100%;
      text-align: left;
      cursor: pointer;
      font-size: 14px;
      color: #555;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .pinyin-toggle:hover {
      background: #eef7ff;
    }
    .pinyin-toggle::after {
      content: '‚ñº';
      font-size: 12px;
      transition: transform 0.2s;
    }
    .pinyin-text {
      padding: 0 15px;
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.3s ease, padding 0.3s ease;
      background: #fafafa;
      font-style: italic;
      color: #666;
      font-size: 15px;
    }
    .pinyin-text.expanded {
      padding: 12px 15px;
      max-height: 100px;
    }
    .pinyin-toggle.expanded::after {
      transform: rotate(180deg);
    }
    .options {
      margin: 20px 0;
    }
    .option {
      margin: 10px 0;
      padding: 12px;
      background: #f8f9fa;
      border: 1px solid #ddd;
      border-radius: 6px;
      cursor: pointer;
      transition: all 0.2s;
    }
    .option:hover {
      background: #eef7ff;
      border-color: #3498db;
    }
    .option.selected {
      background: #d4edff;
      border-color: #3498db;
      box-shadow: 0 0 0 2px #b3d7ff;
    }
    .option input {
      margin-right: 10px;
    }
    button {
      padding: 12px 20px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      display: block;
      margin: 20px auto;
    }
    button:hover {
      background: #2980b9;
    }
    #result {
      margin-top: 20px;
      padding: 15px;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
    }
    .success {
      background: #e8f5e9;
      color: #27ae60;
    }
    .error {
      background: #ffebee;
      color: #e74c3c;
    }
  </style>
</head>
<body>

  <h2>–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ –¥–µ–Ω—å Áô∏‰∏ë?</h2>

  <div class="oracle-text">Áô∏‰∏ëÂÖÅÂÖ∂Èõ®</div>

  <div class="pinyin-container">
    <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
      –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
    </button>
    <div class="pinyin-text">gu«ê ch«íu y«în q√≠ y«î</div>
  </div>

  <div class="options" id="options-container">
    <!-- –í–∞—Ä–∏–∞–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏ –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã -->
  </div>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤: —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è (–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å–µ–π)
    const options = [
      { value: "rain-coming", text: "–ë—É–¥–µ—Ç –¥–æ–∂–¥—å", correct: false },
      { value: "no-rain", text: "–ù–µ –±—É–¥–µ—Ç –¥–æ–∂–¥—è", correct: false },
      { value: "rained", text: "–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ—à—ë–ª –¥–æ–∂–¥—å", correct: true },
      { value: "divined", text: "–ü—Ä–∞–≤–∏—Ç–µ–ª—å –≥–∞–¥–∞–ª", correct: false }
    ];

    let selectedValue = null;

    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ (–§–∏—à–µ—Ä-–ô–µ–π—Ç—Å)
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    function renderOptions() {
      const container = document.getElementById("options-container");
      container.innerHTML = "";

      const shuffled = shuffleArray(options);

      shuffled.forEach(option => {
        const label = document.createElement("label");
        label.className = "option";

        const input = document.createElement("input");
        input.type = "radio";
        input.name = "q";
        input.value = option.value;

        input.onchange = () => {
          selectedValue = option.value;
          // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
          document.querySelectorAll('.option').forEach(el => el.classList.remove('selected'));
          // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π
          label.classList.add('selected');
        };

        const textNode = document.createTextNode(option.text);
        label.appendChild(input);
        label.appendChild(textNode);
        container.appendChild(label);
      });
    }

    function check() {
      if (!selectedValue) {
        document.getElementById("result").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞.";
        document.getElementById("result").className = "error";
        return;
      }

      const isCorrect = selectedValue === "rained";

      const resultEl = document.getElementById("result");
      if (isCorrect) {
        resultEl.textContent = "‚úÖ –í–µ—Ä–Ω–æ! ÂÖÅÂÖ∂Èõ® –æ–∑–Ω–∞—á–∞–µ—Ç: ¬´–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ—à—ë–ª –¥–æ–∂–¥—å¬ª ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.";
        resultEl.className = "success";
        sendResult(true);
      } else {
        resultEl.textContent = "‚ùå –ü–æ–¥—É–º–∞–π—Ç–µ: ÂÖÅ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ, –∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è.";
        resultEl.className = "error";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ÂÖÅ");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í–µ—Ä–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω–æ ÂÖÅ" : "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ÂÖÅ")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    window.onload = renderOptions;

    // –°–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–¥–∏—Ç–µ–ª—é
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task2.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ó–∞–¥–∞–Ω–∏–µ 3: –ó–Ω–∞—á–µ–Ω–∏–µ ÂÖ∂</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    label { display: block; margin: 10px 0; }
    button { padding: 10px; }
  </style>
</head>
<body>
  <h2>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂÖ∂?</h2>
  <p><strong>¬´ÂÖ∂Èõ®¬ª ‚Äî —ç—Ç–æ:</strong></p>
  <div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
    –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
  </button>
  <div class="pinyin-text">
    q√≠ y«î
  </div>
</div>

<style>
  .pinyin-container {
    margin: 15px 0;
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .pinyin-toggle {
    background: #f5f5f5;
    border: none;
    padding: 8px 15px;
    width: 100%;
    text-align: left;
    cursor: pointer;
    font-size: 14px;
    color: #555;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .pinyin-toggle:hover {
    background: #eef7ff;
  }
  
  .pinyin-toggle::after {
    content: '‚ñº';
    font-size: 12px;
    transition: transform 0.2s;
  }
  
  .pinyin-text {
    padding: 0 15px;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    background: #fafafa;
    font-style: italic;
    color: #666;
    font-size: 15px;
  }
  
  .pinyin-text.expanded {
    padding: 12px 15px;
    max-height: 100px;
  }
  
  .pinyin-toggle.expanded::after {
    transform: rotate(180deg);
  }
</style>
  <label><input type="radio" name="q" value="0"> –î–æ–∂–¥—å –∏–¥—ë—Ç</label>
  <label><input type="radio" name="q" value="1"> –ë—É–¥–µ—Ç –¥–æ–∂–¥—å</label>
  <label><input type="radio" name="q" value="2"> –î–æ–∂–¥—è –Ω–µ –±—É–¥–µ—Ç</label>
  <label><input type="radio" name="q" value="3"> –î–æ–∂–¥—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±—ã–ª</label>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    function sendResult(success, message) {
      window.parent.postMessage({ type: "TASK_RESULT", success, message }, "*");
    }

    function check() {
      const selected = document.querySelector('input[name="q"]:checked');
      if (!selected) {
        document.getElementById("result").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç.";
        return;
      }

      if (selected.value === "1") {
        document.getElementById("result").textContent = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! ÂÖ∂ ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –±—É–¥—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.";
        sendResult(true);
      } else {
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. ÂÖ∂ ‚Äî —Å–ª—É–∂–µ–±–Ω–æ–µ —Å–ª–æ–≤–æ –±—É–¥—É—â–µ–≥–æ/–ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è.";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ÂÖ∂");
      }
    }
  </script>
</body>
</html><script>// –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ —ç—Ç–æ ‚Äî –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
window.parent.postMessage({
  type: "TASK_EXISTS",
  valid: true
}, "*");
</script>
-e 

=== üìÑ task20.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É</title>
  <style>
    .hint-list {
  margin: 5px 0 0;
  padding-left: 20px;
  color: #7f8c8d;
  font-size: 14px;
  list-style-type: "üî∏ ";
}

.hint-list li {
  margin: 3px 0;
}
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      line-height: 1.6;
    }
    h2 {
      color: #2c3e50;
    }
    .instructions {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 16px;
    }
    .drop-area {
      min-height: 60px;
      border: 2px dashed #3498db;
      border-radius: 8px;
      padding: 10px;
      margin: 20px 0;
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      background: #eef7ff;
      font-size: 24px;
      align-items: center;
    }
    #char-pool {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin: 15px 0;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 8px;
      min-height: 60px;
      background: #f9f9f9;
    }
    .char-box {
      width: 45px;
      height: 45px;
      background: white;
      border: 1px solid #ccc;
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: grab;
      font-size: 24px;
      user-select: none;
      box-shadow: 0 1px 3px rgba(0,0,0,0.08);
      transition: all 0.2s;
    }
    .char-box:hover {
      transform: translateY(-2px);
      box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    }
    .char-box.dragging {
      opacity: 0.7;
      transform: scale(1.05);
    }
    .punctuation {
      font-size: 20px;
      color: #7f8c8d;
    }
    .controls {
      margin-top: 20px;
    }
    button {
      padding: 10px 18px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-right: 10px;
    }
    button:hover {
      background: #2980b9;
    }
    .message {
      margin-top: 15px;
      font-weight: bold;
      color: #e74c3c;
    }
    .success {
      color: #27ae60;
    }
    .hint {
      font-style: italic;
      color: #7f8c8d;
      margin-top: 5px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É</h2>

  <div class="instructions">
    <p><strong>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</strong>, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ñ—Ä–∞–∑—É:</p>
    <p><em>"–í–æ–ø—Ä–æ—Å –≥–ª–∞—Å–∏—Ç: ¬´–ë—ã–ª –ª–∏ –¥–æ–∂–¥—å?¬ª"</em></p>
    
<p class="hint">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∫–æ—Å–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤—Ä–µ–º–µ–Ω–∏</p>

  </div>

  <p><strong>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã:</strong></p>
  <div id="char-pool"></div>

  <p><strong>–°–æ–±–µ—Ä–∏—Ç–µ –∑–¥–µ—Å—å:</strong></p>
  <div id="drop-area" class="drop-area">
    <!-- –°—é–¥–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—é—Ç—Å—è –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
  </div>

  <div class="controls">
    <button id="check-btn">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
    <button id="reset-btn">–°–±—Ä–æ—Å–∏—Ç—å</button>
  </div>

  <p id="result" class="message"></p>

  <script>
    // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    const expected = ['Ë≤û', 'Êõ∞', 'ÂÖÅ', 'Èõ®'];

    // –í—Å–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã: –Ω—É–∂–Ω—ã–µ + –æ–±–º–∞–Ω–∫–∏ (—Ç–æ–ª—å–∫–æ –∏–∑ —É—Ä–æ–∫–∞ 1)
    const allChars = [
      'Â∑±', 'ÂçØ', 'Áéã', '‰∏ç', 'Ë≤û', 'Â∑≥',
      '‰∏ô', 'ÂØÖ', 'Áà≠', 'Èõ®', 'Êõ∞', 'ÂÖ∂', 
      'Áô∏', '‰∫•', 'ÂÖÅ', 'Âç†', '‰∏ë', 'Áèè', 'Â£¨', 'Âçà'
    ];

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
    const shuffledChars = [...allChars].sort(() => Math.random() - 0.5);

    const charPool = document.getElementById('char-pool');
    const dropArea = document.getElementById('drop-area');
    const checkBtn = document.getElementById('check-btn');
    const resetBtn = document.getElementById('reset-btn');
    const resultEl = document.getElementById('result');

    // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ char-pool
    shuffledChars.forEach(char => {
      const box = document.createElement('div');
      box.className = 'char-box';
      if (char === 'Ôºå') {
        box.classList.add('punctuation');
      }
      box.textContent = char;
      box.draggable = true;

      box.addEventListener('dragstart', (e) => {
        e.dataTransfer.setData('text/plain', char);
        box.classList.add('dragging');
      });

      box.addEventListener('dragend', () => {
        box.classList.remove('dragging');
      });

      charPool.appendChild(box);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop –≤ —Ü–µ–ª–µ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    dropArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropArea.style.borderColor = '#e67e22';
    });

    dropArea.addEventListener('dragleave', () => {
      dropArea.style.borderColor = '#3498db';
    });

    dropArea.addEventListener('drop', (e) => {
      e.preventDefault();
      dropArea.style.borderColor = '#3498db';

      const char = e.dataTransfer.getData('text/plain');
      const draggedBox = document.querySelector(`#char-pool .char-box[draggable="true"]:not(.removed):not([style*='display: none'])[data-text='${char}']`) ||
                        [...document.querySelectorAll('#char-pool .char-box')].find(b => b.textContent === char && b.draggable);

      if (draggedBox) {
        const clone = draggedBox.cloneNode(true);
        clone.classList.add('removed');
        clone.draggable = false;
        clone.style.cursor = 'default';

        // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –∏–∑ –ø—É–ª–∞
        draggedBox.remove();

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ drop-area
        dropArea.appendChild(clone);
      }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    checkBtn.addEventListener('click', () => {
      const current = Array.from(dropArea.children).map(el => el.textContent);
      if (arraysEqual(current, expected)) {
        resultEl.innerHTML = '‚úÖ <strong>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</strong> –≠—Ç–æ –ø–æ–¥–ª–∏–Ω–Ω–∞—è –æ—Ä–∞–∫—É–ª—å–Ω–∞—è –Ω–∞–¥–ø–∏—Å—å.<br>Ë≤ûÊõ∞ÂÖÅÈõ® = –í–æ–ø—Ä–æ—Å –≥–ª–∞—Å–∏—Ç: ¬´–ë—ã–ª –ª–∏ –¥–æ–∂–¥—å?¬ª ';
        resultEl.className = 'message success';
        sendResult(true);
      } else {
        resultEl.textContent = '‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
        resultEl.className = 'message';
        sendResult(false, '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫');
      }
    });

    // –°–±—Ä–æ—Å
    resetBtn.addEventListener('click', () => {
      dropArea.innerHTML = '';
      resultEl.textContent = '';
      charPool.innerHTML = '';

      const shuffled = [...allChars].sort(() => Math.random() - 0.5);
      shuffled.forEach(char => {
        const box = document.createElement('div');
        box.className = 'char-box';
        if (char === 'Ôºå') {
          box.classList.add('punctuation');
        }
        box.textContent = char;
        box.draggable = true;

        box.addEventListener('dragstart', (e) => {
          e.dataTransfer.setData('text/plain', char);
          box.classList.add('dragging');
        });

        box.addEventListener('dragend', () => {
          box.classList.remove('dragging');
        });

        charPool.appendChild(box);
      });
    });

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    function arraysEqual(a, b) {
      if (a.length !== b.length) return false;
      for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success: !!success,
        message: message || (success ? "–§—Ä–∞–∑–∞ —Å–æ–±—Ä–∞–Ω–∞ –≤–µ—Ä–Ω–æ" : "–û—à–∏–±–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ")
      }, "*");
    }
  </script>
</body>
</html>

<!-- –°–∏–≥–Ω–∞–ª: —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ -->
<script>
  window.parent.postMessage({
    type: "TASK_EXISTS",
    valid: true
  }, "*");
</script>-e 

=== üìÑ task21.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É</title>
  <style>
    .hint-list {
  margin: 5px 0 0;
  padding-left: 20px;
  color: #7f8c8d;
  font-size: 14px;
  list-style-type: "üî∏ ";
}

.hint-list li {
  margin: 3px 0;
}
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      line-height: 1.6;
    }
    h2 {
      color: #2c3e50;
    }
    .instructions {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 16px;
    }
    .drop-area {
      min-height: 60px;
      border: 2px dashed #3498db;
      border-radius: 8px;
      padding: 10px;
      margin: 20px 0;
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      background: #eef7ff;
      font-size: 24px;
      align-items: center;
    }
    #char-pool {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin: 15px 0;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 8px;
      min-height: 60px;
      background: #f9f9f9;
    }
    .char-box {
      width: 45px;
      height: 45px;
      background: white;
      border: 1px solid #ccc;
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: grab;
      font-size: 24px;
      user-select: none;
      box-shadow: 0 1px 3px rgba(0,0,0,0.08);
      transition: all 0.2s;
    }
    .char-box:hover {
      transform: translateY(-2px);
      box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    }
    .char-box.dragging {
      opacity: 0.7;
      transform: scale(1.05);
    }
    .punctuation {
      font-size: 20px;
      color: #7f8c8d;
    }
    .controls {
      margin-top: 20px;
    }
    button {
      padding: 10px 18px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-right: 10px;
    }
    button:hover {
      background: #2980b9;
    }
    .message {
      margin-top: 15px;
      font-weight: bold;
      color: #e74c3c;
    }
    .success {
      color: #27ae60;
    }
    .hint {
      font-style: italic;
      color: #7f8c8d;
      margin-top: 5px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–±–µ—Ä–∏ —Ñ—Ä–∞–∑—É</h2>

  <div class="instructions">
    <p><strong>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</strong>, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ñ—Ä–∞–∑—É:</p>
    <p><em>¬´–ù–∞ —à–µ—Å—Ç–æ–π –¥–µ–Ω—å –ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –∑–∞–¥–∞–≤–∞–ª –≤–æ–ø—Ä–æ—Å–æ–≤¬ª</em></p>
    
<p class="hint">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤—Å–ø–æ–º–Ω–∏—Ç–µ –ª–µ–∫—Å–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º –∑–Ω–∞–∫–∞–º</p>
<ul class="hint-list">
  <li>–î–µ–Ω—å 1: Áî≤ + Â≠ê ‚Üí Áî≤Â≠ê</li>
  <li>–î–µ–Ω—å 2: ‰πô + ‰∏ë ‚Üí ‰πô‰∏ë</li>
  <li>etc...</li>

</ul>  </div>

  <p><strong>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã:</strong></p>
  <div id="char-pool"></div>

  <p><strong>–°–æ–±–µ—Ä–∏—Ç–µ –∑–¥–µ—Å—å:</strong></p>
  <div id="drop-area" class="drop-area">
    <!-- –°—é–¥–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—é—Ç—Å—è –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
  </div>

  <div class="controls">
    <button id="check-btn">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
    <button id="reset-btn">–°–±—Ä–æ—Å–∏—Ç—å</button>
  </div>

  <p id="result" class="message"></p>

  <script>
    // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    const expected = ['Â∑±', 'Â∑≥', 'Áéã', '‰∏ç', 'Ë≤û'];

    // –í—Å–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã: –Ω—É–∂–Ω—ã–µ + –æ–±–º–∞–Ω–∫–∏ (—Ç–æ–ª—å–∫–æ –∏–∑ —É—Ä–æ–∫–∞ 1)
    const allChars = [
      'Â∑±', 'ÂçØ', 'Áéã', '‰∏ç', 'Ë≤û', 'Â∑≥',
      '‰∏ô', 'ÂØÖ', 'Áà≠', 'Èõ®', 'Êõ∞', 'ÂÖ∂', 
      'Áô∏', '‰∫•', 'ÂÖÅ', 'Âç†', '‰∏ë', 'Áèè', 'Â£¨', 'Âçà'
    ];

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
    const shuffledChars = [...allChars].sort(() => Math.random() - 0.5);

    const charPool = document.getElementById('char-pool');
    const dropArea = document.getElementById('drop-area');
    const checkBtn = document.getElementById('check-btn');
    const resetBtn = document.getElementById('reset-btn');
    const resultEl = document.getElementById('result');

    // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ char-pool
    shuffledChars.forEach(char => {
      const box = document.createElement('div');
      box.className = 'char-box';
      if (char === 'Ôºå') {
        box.classList.add('punctuation');
      }
      box.textContent = char;
      box.draggable = true;

      box.addEventListener('dragstart', (e) => {
        e.dataTransfer.setData('text/plain', char);
        box.classList.add('dragging');
      });

      box.addEventListener('dragend', () => {
        box.classList.remove('dragging');
      });

      charPool.appendChild(box);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop –≤ —Ü–µ–ª–µ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    dropArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropArea.style.borderColor = '#e67e22';
    });

    dropArea.addEventListener('dragleave', () => {
      dropArea.style.borderColor = '#3498db';
    });

    dropArea.addEventListener('drop', (e) => {
      e.preventDefault();
      dropArea.style.borderColor = '#3498db';

      const char = e.dataTransfer.getData('text/plain');
      const draggedBox = document.querySelector(`#char-pool .char-box[draggable="true"]:not(.removed):not([style*='display: none'])[data-text='${char}']`) ||
                        [...document.querySelectorAll('#char-pool .char-box')].find(b => b.textContent === char && b.draggable);

      if (draggedBox) {
        const clone = draggedBox.cloneNode(true);
        clone.classList.add('removed');
        clone.draggable = false;
        clone.style.cursor = 'default';

        // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –∏–∑ –ø—É–ª–∞
        draggedBox.remove();

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ drop-area
        dropArea.appendChild(clone);
      }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    checkBtn.addEventListener('click', () => {
      const current = Array.from(dropArea.children).map(el => el.textContent);
      if (arraysEqual(current, expected)) {
        resultEl.innerHTML = '‚úÖ <strong>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</strong> –≠—Ç–æ –ø–æ–¥–ª–∏–Ω–Ω–∞—è –æ—Ä–∞–∫—É–ª—å–Ω–∞—è –Ω–∞–¥–ø–∏—Å—å.<br>Â∑±Â∑≥Áéã‰∏çË≤û = "–ù–∞ —à–µ—Å—Ç–æ–π –¥–µ–Ω—å –ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –∑–∞–¥–∞–≤–∞–ª –≤–æ–ø—Ä–æ—Å–æ–≤"';
        resultEl.className = 'message success';
        sendResult(true);
      } else {
        resultEl.textContent = '‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
        resultEl.className = 'message';
        sendResult(false, '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫');
      }
    });

    // –°–±—Ä–æ—Å
    resetBtn.addEventListener('click', () => {
      dropArea.innerHTML = '';
      resultEl.textContent = '';
      charPool.innerHTML = '';

      const shuffled = [...allChars].sort(() => Math.random() - 0.5);
      shuffled.forEach(char => {
        const box = document.createElement('div');
        box.className = 'char-box';
        if (char === 'Ôºå') {
          box.classList.add('punctuation');
        }
        box.textContent = char;
        box.draggable = true;

        box.addEventListener('dragstart', (e) => {
          e.dataTransfer.setData('text/plain', char);
          box.classList.add('dragging');
        });

        box.addEventListener('dragend', () => {
          box.classList.remove('dragging');
        });

        charPool.appendChild(box);
      });
    });

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    function arraysEqual(a, b) {
      if (a.length !== b.length) return false;
      for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success: !!success,
        message: message || (success ? "–§—Ä–∞–∑–∞ —Å–æ–±—Ä–∞–Ω–∞ –≤–µ—Ä–Ω–æ" : "–û—à–∏–±–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ")
      }, "*");
    }
  </script>
</body>
</html>

<!-- –°–∏–≥–Ω–∞–ª: —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ -->
<script>
  window.parent.postMessage({
    type: "TASK_EXISTS",
    valid: true
  }, "*");
</script>-e 

=== üìÑ task22.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ</title>
  <style>
  body {
    font-family: Arial, sans-serif;
    padding: 20px;
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
  }
  h2 {
    color: #2c3e50;
    text-align: center;
    margin-bottom: 20px;
  }
  .instruction {
    text-align: center;
    margin-bottom: 25px;
    color: #555;
  }
  .pair {
    margin: 15px 0;
    padding: 12px;
    background: #f9f9f9;
    border-radius: 8px;
    border: 1px solid #eee;
  }
  label {
    font-weight: bold;
    color: #333;
  }
  select {
    width: 100%;
    max-width: 300px;
    padding: 8px;
    margin-top: 8px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 15px;
  }
  button {
    padding: 12px 20px;
    font-size: 16px;
    background: #3498db;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    display: block;
    margin: 30px auto;
  }
  button:hover {
    background: #2980b9;
  }
  #result {
    margin-top: 20px;
    padding: 15px;
    border-radius: 5px;
    text-align: center;
    font-weight: bold;
  }
  .success {
    background: #e8f5e9;
    color: #27ae60;
  }
  .error {
    background: #ffebee;
    color: #e74c3c;
  }
</style>
</head>
<body>

  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ</h2>
  <p class="instruction">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å–µ–π —ç–ø–æ—Ö–∏ –ò–Ω—å.</p>

  <div id="pairs-container">
    <!-- –ü–∞—Ä—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
  </div>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –°–ª–æ–≤–∞—Ä—å: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üí –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å–µ–π)
    const wordBank = [
      { char: "‰∏ô", correct: "3-–π –Ω–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª" },
      { char: "Âçú", correct: "–≥–∞–¥–∞—Ç—å" },
      { char: "Èõ®", correct: "–¥–æ–∂–¥—å" },
      { char: "Áéã", correct: "–ø—Ä–∞–≤–∏—Ç–µ–ª—å" },
      { char: "Ë≤û", correct: "–∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ—Ä–∞–∫—É–ª—É" },
      { char: "Êõ∞", correct: "—Å–∫–∞–∑–∞—Ç—å, –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ (–≤–≤–æ–¥–∏—Ç –ø—Ä—è–º—É—é —Ä–µ—á—å)" },
      { char: "ÂÖÅ", correct: "–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)" },
      { char: "Âç†", correct: "–∏—Å—Ç–æ–ª–∫–æ–≤—ã–≤–∞—Ç—å, –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å" }
    ];

    // –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
    const allValues = wordBank.map(item => item.correct);

    // –§—É–Ω–∫—Ü–∏—è –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö –ø–∞—Ä
    function renderPairs() {
      const container = document.getElementById("pairs-container");
      container.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø–æ—Ä—è–¥–æ–∫ –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤
      const shuffledChars = shuffleArray(wordBank);

      shuffledChars.forEach(item => {
        const pair = document.createElement("div");
        pair.className = "pair";

        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã, –Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±—É–¥–µ—Ç
        const options = shuffleArray([...new Set([...allValues])]); // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏, –µ—Å–ª–∏ –µ—Å—Ç—å

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º <select>
        let selectHTML = `<select id="char_${item.char}">
          <option value="">-- –≤—ã–±–µ—Ä–∏—Ç–µ --</option>`;
        
        options.forEach(value => {
          selectHTML += `<option value="${value}">${value}</option>`;
        });
        
        selectHTML += `</select>`;

        pair.innerHTML = `<label>${item.char} ‚Üí</label> ${selectHTML}`;
        container.appendChild(pair);
      });
    }

    function check() {
      const results = {};
      let allFilled = true;

      wordBank.forEach(item => {
        const select = document.getElementById(`char_${item.char}`);
        if (!select || !select.value) {
          allFilled = false;
        }
        results[item.char] = select?.value || null;
      });

      if (!allFilled) {
        document.getElementById("result").textContent = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.";
        document.getElementById("result").className = "error";
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –æ—Ç–≤–µ—Ç—ã –≤–µ—Ä–Ω—ã
      const isCorrect = wordBank.every(item => results[item.char] === item.correct);

      const resultEl = document.getElementById("result");
      if (isCorrect) {
        resultEl.textContent = "‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ! –í—ã —Ç–æ—á–Ω–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤ –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å–µ–π.";
        resultEl.className = "success";
        sendResult(true);
      } else {
        const hint = "–ü–æ–¥—Å–∫–∞–∑–∫–∞: Âçú ‚Äî –≥–∞–¥–∞—Ç—å, Áéã ‚Äî –ø—Ä–∞–≤–∏—Ç–µ–ª—å, Ë≤û ‚Äî –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å, ÂÖÅ ‚Äî –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ.";
        resultEl.textContent = "‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã. " + hint;
        resultEl.className = "error";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –≤–µ—Ä–Ω–æ" : "–û—à–∏–±–∫–∞ –≤ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    window.onload = renderPairs;

    // –°–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–¥–∏—Ç–µ–ª—é
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task3.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ü–µ—Ä–µ–≤–æ–¥</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      padding: 20px; 
    }
    .question {
      margin-bottom: 20px;
    }
    .options {
      margin-left: 20px;
    }
    .options label {
      display: block;
      margin: 8px 0;
      cursor: pointer;
      color: #333;
    }
    .options input {
      margin-right: 8px;
    }
    button { 
      padding: 10px; 
      margin-top: 20px; 
    }
    .pinyin-container {
      margin: 15px 0;
      border: 1px solid #eee;
      border-radius: 8px;
      overflow: hidden;
    }
    .pinyin-toggle {
      background: #f5f5f5;
      border: none;
      padding: 8px 15px;
      width: 100%;
      text-align: left;
      cursor: pointer;
      font-size: 14px;
      color: #555;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .pinyin-toggle:hover {
      background: #eef7ff;
    }
    .pinyin-toggle::after {
      content: '‚ñº';
      font-size: 12px;
      transition: transform 0.2s;
    }
    .pinyin-text {
      padding: 0 15px;
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.3s ease, padding 0.3s ease;
      background: #fafafa;
      font-style: italic;
      color: #666;
      font-size: 15px;
    }
    .pinyin-text.expanded {
      padding: 12px 15px;
      max-height: 100px;
    }
    .pinyin-toggle.expanded::after {
      transform: rotate(180deg);
    }
  </style>
</head>
<body>

  <h2>–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ</h2>

  <div id="questions-container">
    <!-- –í–æ–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ -->
  </div>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ (–º–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
    const questions = [
      {
        id: "t1",
        text: "‰∏ôÂØÖÂçú",
        pinyin: "b«êng y√≠n bo",
        options: [
          "–≥–∞–¥–∞–ª–∏ –≤ –¥–µ–Ω—å –±–∏–Ω-–∏–Ω—å",
          "–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≥–∞–¥–∞–ª",
          "–≤ –¥–µ–Ω—å –±–∏–Ω—å-–º–∞–æ",
          "–∂–µ—Ä—Ç–≤–æ–ø—Ä–∏–Ω–æ—à–µ–Ω–∏–µ –≤ —Ö—Ä–∞–º–µ"
        ],
        correct: "–≥–∞–¥–∞–ª–∏ –≤ –¥–µ–Ω—å –±–∏–Ω-–∏–Ω—å"
      },
      {
        id: "t2",
        text: "ÁéãÂç†Êõ∞",
        pinyin: "w√°ng zh√†n yuƒì",
        options: [
          "–ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª",
          "–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª",
          "—Ü–∞—Ä—å –ø—Ä–∏–∫–∞–∑–∞–ª",
          "–æ–Ω –∑–∞–ø–∏—Å–∞–ª"
        ],
        correct: "–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª"
      }
    ];

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ (–∞–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞)
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    function loadQuestions() {
      const container = document.getElementById("questions-container");
      container.innerHTML = ""; // –æ—á–∏—Å—Ç–∏–º

      const shuffled = shuffleArray(questions);

      shuffled.forEach(q => {
        const questionDiv = document.createElement("div");
        questionDiv.className = "question";
        questionDiv.innerHTML = `
          <p><strong>${q.text}</strong></p>
          <div class="pinyin-container">
            <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
              –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
            </button>
            <div class="pinyin-text">${q.pinyin}</div>
          </div>
          <div class="options">
            ${q.options.map(option => `
              <label>
                <input type="radio" name="${q.id}" value="${option}">
                ${option}
              </label>
            `).join("")}
          </div>
        `;
        container.appendChild(questionDiv);
      });
    }

    function check() {
      const selectedT1 = document.querySelector('input[name="t1"]:checked');
      const selectedT2 = document.querySelector('input[name="t2"]:checked');

      if (!selectedT1 || !selectedT2) {
        document.getElementById("result").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞.";
        sendResult(false, "–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã");
        return;
      }

      const correctT1 = questions.find(q => q.id === "t1").correct;
      const correctT2 = questions.find(q => q.id === "t2").correct;

      const match1 = selectedT1.value === correctT1;
      const match2 = selectedT2.value === correctT2;

      if (match1 && match2) {
        document.getElementById("result").textContent = "‚úÖ –í–µ—Ä–Ω–æ!";
        sendResult(true);
      } else {
        document.getElementById("result").textContent = "‚ùå –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –ü–æ–¥—Å–∫–∞–∑–∫–∞: Êõ∞ ‚Äî –≤–≤–æ–¥–∏—Ç –ø—Ä—è–º—É—é —Ä–µ—á—å, Âç† ‚Äî –∏—Å—Ç–æ–ª–∫–æ–≤—ã–≤–∞—Ç—å.";
        sendResult(false, "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({ type: "TASK_RESULT", success, message }, "*");
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    window.onload = loadQuestions;

    // –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({
      type: "TASK_EXISTS",
      valid: true
    }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task4.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ü—Ä—è–º–∞—è —Ä–µ—á—å –≤ –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å—è—Ö</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
    }
    h2 {
      color: #2c3e50;
      text-align: center;
    }
    .task {
      background: #f8f9fa;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    .oracle-text {
      font-size: 24px;
      text-align: center;
      margin: 20px 0;
      font-weight: bold;
    }
    .question {
      font-weight: bold;
      margin: 15px 0 10px;
    }
    .options {
      margin-left: 20px;
    }
    .option {
      margin: 8px 0;
      padding: 8px;
      border-radius: 5px;
      background: white;
      cursor: pointer;
      transition: background 0.2s;
    }
    .option:hover {
      background: #eef7ff;
    }
    .option.selected {
      background: #d4edff;
      border-left: 3px solid #3498db;
    }
    button {
      padding: 10px 18px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 15px;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
    button:hover {
      background: #2980b9;
    }
    #result {
      margin-top: 20px;
      padding: 15px;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
    }
    .success {
      background: #e8f5e9;
      color: #27ae60;
    }
    .error {
      background: #ffebee;
      color: #e74c3c;
    }
    .explanation {
      margin-top: 15px;
      padding: 10px;
      background: #fffde7;
      border-radius: 5px;
      font-size: 14px;
    }

    /* –°—Ç–∏–ª—å –¥–ª—è –ø–∏–Ω—å–∏–Ω—è */
    .pinyin-container {
      margin: 15px 0;
      border: 1px solid #eee;
      border-radius: 8px;
      overflow: hidden;
    }
    .pinyin-toggle {
      background: #f5f5f5;
      border: none;
      padding: 8px 15px;
      width: 100%;
      text-align: left;
      cursor: pointer;
      font-size: 14px;
      color: #555;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .pinyin-toggle:hover {
      background: #eef7ff;
    }
    .pinyin-toggle::after {
      content: '‚ñº';
      font-size: 12px;
      transition: transform 0.2s;
    }
    .pinyin-text {
      padding: 0 15px;
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.3s ease, padding 0.3s ease;
      background: #fafafa;
      font-style: italic;
      color: #666;
      font-size: 15px;
    }
    .pinyin-text.expanded {
      padding: 12px 15px;
      max-height: 100px;
    }
    .pinyin-toggle.expanded::after {
      transform: rotate(180deg);
    }
  </style>
</head>
<body>
  <h2>–ü—Ä—è–º–∞—è —Ä–µ—á—å –≤ –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å—è—Ö</h2>

  <div class="task">
    <p>–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –Ω–∞–¥–ø–∏—Å—å –∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å:</p>
    
    <div class="oracle-text">Ë≤û‰∏ÅÂçØÂÖ∂Èõ®ÁéãÂç†Êõ∞ÂÖ∂Èõ®</div>
    
    <div class="pinyin-container">
      <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
        –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
      </button>
      <div class="pinyin-text">zhƒìn dƒ´ng m«éo q√≠ y«î w√°ng zh√†n yuƒì q√≠ y«î</div>
    </div>

    <div class="question">–ö–∞–∫–∞—è —á–∞—Å—Ç—å —ç—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø—Ä—è–º–æ–π –≤–æ–ø—Ä–æ—Å, –∑–∞–¥–∞–Ω–Ω—ã–π –æ—Ä–∞–∫—É–ª—É?</div>
    
    <div id="options-container" class="options">
      <!-- –í–∞—Ä–∏–∞–Ω—Ç—ã –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏ –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã -->
    </div>
    
    <button onclick="checkAnswer()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
    
    <div id="result"></div>
    
    <div id="explanation" class="explanation" style="display: none;">
      <p><strong>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:</strong> –í –æ—Ä–∞–∫—É–ª—å–Ω—ã—Ö –Ω–∞–¥–ø–∏—Å—è—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—ã—á–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç:</p>
      <ol>
        <li><strong>–í–æ–ø—Ä–æ—Å –∫ –æ—Ä–∞–∫—É–ª—É</strong> ‚Äî –≤–≤–æ–¥–∏—Ç—Å—è –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–º <strong>Ë≤û</strong> ‚Äî —ç—Ç–æ –ø—Ä—è–º–∞—è —Ä–µ—á—å</li>
        <li><strong>–û—Ç–≤–µ—Ç</strong> ‚Äî –≤–≤–æ–¥–∏—Ç—Å—è —Ñ—Ä–∞–∑–æ–π <strong>ÁéãÂç†Êõ∞</strong> ‚Äî "—Ü–∞—Ä—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª" ‚Äî —Ç–æ–∂–µ –ø—Ä—è–º–∞—è —Ä–µ—á—å</li>
      </ol>
      <p>–í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ <strong>„ÄåË≤û‰∏ÅÂçØÂÖ∂Èõ®„Äç</strong> ‚Äî —ç—Ç–æ –ø–æ–ª–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞: "–ì–∞–¥–∞–Ω–∏–µ: –±—É–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å –Ω–∞ —á–µ—Ç–≤–µ—Ä—Ç—ã–π –¥–µ–Ω—å?"</p>
    </div>
  </div>

  <script>
    // –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, –∫–∞–∫–æ–π –∏–∑ –Ω–∏—Ö –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
    const options = [
      { id: 1, text: "Ë≤û‰∏ÅÂçØÂÖ∂Èõ®", correct: true },
      { id: 2, text: "ÁéãÂç†Êõ∞ÂÖ∂Èõ®", correct: false },
      { id: 3, text: "‰∏ÅÂçØÂÖ∂Èõ®", correct: false },
      { id: 4, text: "Ë≤û‰∏ÅÂçØ", correct: false }
    ];

    let selectedOptionId = null;

    // –§—É–Ω–∫—Ü–∏—è –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    function renderOptions() {
      const container = document.getElementById("options-container");
      container.innerHTML = "";

      const shuffled = shuffleArray(options);

      shuffled.forEach((option, index) => {
        const optionEl = document.createElement("div");
        optionEl.className = "option";
        optionEl.textContent = option.text;
        optionEl.dataset.id = option.id;
        optionEl.onclick = () => selectOption(option.id);
        container.appendChild(optionEl);
      });
    }

    function selectOption(id) {
      selectedOptionId = id;
      document.querySelectorAll('.option').forEach(opt => {
        opt.classList.remove('selected');
      });
      // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç —Å –Ω—É–∂–Ω—ã–º data-id
      document.querySelector(`.option[data-id="${id}"]`).classList.add('selected');
    }

    function checkAnswer() {
      const resultEl = document.getElementById('result');
      const explanationEl = document.getElementById('explanation');

      if (!selectedOptionId) {
        resultEl.textContent = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞";
        resultEl.className = "error";
        return;
      }

      const selectedOption = options.find(opt => opt.id === selectedOptionId);

      if (selectedOption.correct) {
        resultEl.innerHTML = "‚úÖ <strong>–í–µ—Ä–Ω–æ!</strong> –≠—Ç–æ –ø–æ–ª–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫ –æ—Ä–∞–∫—É–ª—É.";
        resultEl.className = "success";
        explanationEl.style.display = 'block';
        sendResult(true);
      } else {
        resultEl.textContent = "‚ùå –ù–µ —Å–æ–≤—Å–µ–º –≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
        resultEl.className = "error";
        explanationEl.style.display = 'block';
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –ø—Ä—è–º–æ–π —Ä–µ—á–∏");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success: !!success,
        message: message || (success ? "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø—Ä—è–º–∞—è —Ä–µ—á—å" : "–û—à–∏–±–∫–∞")
      }, "*");
    }

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    window.onload = renderOptions;

    // –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({
      type: "TASK_EXISTS",
      valid: true
    }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task5.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–∫–∞–∑—É–µ–º–æ–µ</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    button { padding: 10px; }
  </style>
</head>
<body>
  <h2>–ù–∞–π–¥–∏ –ø—Ä–µ–¥–∏–∫–∞—Ç</h2>
  <p><strong>Â∑±ÂçØÂçúË≤ûÈõ®Ôºü</strong></p>
  <div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
    –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
  </button>
  <div class="pinyin-text">
    j«ê m«éo bu zhƒìn y«î?
  </div>
</div>

<style>
  .pinyin-container {
    margin: 15px 0;
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .pinyin-toggle {
    background: #f5f5f5;
    border: none;
    padding: 8px 15px;
    width: 100%;
    text-align: left;
    cursor: pointer;
    font-size: 14px;
    color: #555;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .pinyin-toggle:hover {
    background: #eef7ff;
  }
  
  .pinyin-toggle::after {
    content: '‚ñº';
    font-size: 12px;
    transition: transform 0.2s;
  }
  
  .pinyin-text {
    padding: 0 15px;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    background: #fafafa;
    font-style: italic;
    color: #666;
    font-size: 15px;
  }
  
  .pinyin-text.expanded {
    padding: 12px 15px;
    max-height: 100px;
  }
  
  .pinyin-toggle.expanded::after {
    transform: rotate(180deg);
  }
</style>
  <p>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥–∏–∫–∞—Ç–æ–º?</p>
  <button onclick="answer('Èõ®')">Èõ®</button>
  <button onclick="answer('Ë≤û')">Ë≤û</button>
  <button onclick="answer('Âçú')">Âçú</button>
  <button onclick="answer('Â∑±ÂçØ')">Â∑±ÂçØ</button>

  <p id="result"></p>

  <script>
    function answer(sel) {
      if (sel === "Èõ®") {
        document.getElementById("result").textContent = "‚úÖ –í–µ—Ä–Ω–æ! Èõ® ‚Äî –ø—Ä–µ–¥–∏–∫–∞—Ç: ¬´–±—É–¥–µ—Ç –¥–æ–∂–¥—å?¬ª";
        sendResult(true);
      } else {
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–¥—É–º–∞–π—Ç–µ: —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å ¬´—á—Ç–æ –±—É–¥–µ—Ç?¬ª";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Å–∫–∞–∑—É–µ–º–æ–≥–æ");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage({ type: "TASK_RESULT", success, message }, "*");
    }
  </script>
</body>
</html><script>// –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ —ç—Ç–æ ‚Äî –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
window.parent.postMessage({
  type: "TASK_EXISTS",
  valid: true
}, "*");
</script>
-e 

=== üìÑ task6.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ –æ—Ä–∞–∫—É–ª—å–Ω–æ–π –Ω–∞–¥–ø–∏—Å–∏</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      line-height: 1.6;
      max-width: 800px;
      margin: 0 auto;
    }
    h2 {
      color: #2c3e50;
      text-align: center;
    }
    .instructions {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 16px;
    }
    .drop-area {
      min-height: 60px;
      border: 2px dashed #3498db;
      border-radius: 8px;
      padding: 10px;
      margin: 20px 0;
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      background: #eef7ff;
      font-size: 24px;
      align-items: center;
    }
    .word-pool {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin: 15px 0;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 8px;
      min-height: 60px;
      background: #f9f9f9;
      align-items: center;
    }
    .word-box {
      background: white;
      border: 1px solid #ccc;
      border-radius: 6px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      cursor: grab;
      font-size: 18px;
      padding: 8px 12px;
      user-select: none;
      box-shadow: 0 1px 3px rgba(0,0,0,0.08);
      transition: all 0.2s;
      white-space: nowrap;
      margin: 2px;
    }
    .word-box:hover {
      transform: translateY(-2px);
      box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    }
    .word-box.dragging {
      opacity: 0.7;
      transform: scale(1.05);
    }
    .controls {
      margin-top: 20px;
      text-align: center;
    }
    button {
      padding: 10px 18px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-right: 10px;
    }
    button:hover {
      background: #2980b9;
    }
    .message {
      margin-top: 15px;
      font-weight: bold;
      color: #e74c3c;
      text-align: center;
    }
    .success {
      color: #27ae60;
    }
    .hint {
      font-style: italic;
      color: #7f8c8d;
      margin-top: 5px;
      font-size: 14px;
    }
    .hint-list {
      margin: 5px 0 0;
      padding-left: 20px;
      color: #7f8c8d;
      font-size: 14px;
      list-style-type: "üî∏ ";
    }
    .hint-list li {
      margin: 3px 0;
    }
    .oracle-text {
      font-size: 24px;
      text-align: center;
      margin: 20px 0;
      font-weight: bold;
    }
    .task-container {
      margin-bottom: 30px;
    }
    .task-title {
      font-weight: bold;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ –æ—Ä–∞–∫—É–ª—å–Ω–æ–π –Ω–∞–¥–ø–∏—Å–∏</h2>

  <div class="instructions">
    <p><strong>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å–ª–æ–≤–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</strong>, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ä–∞–∫—É–ª—å–Ω—É—é –Ω–∞–¥–ø–∏—Å—å.</p>
    
  </div>

  <div class="task-container">
    <div class="task-title">1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞–¥–ø–∏—Å—å:</div>
    <div class="oracle-text">‰∏çÂÖ∂Èõ®</div>
    
    <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–≤–∞:</p>
    <div id="word-pool1" class="word-pool"></div>

    <p>–°–æ–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –∑–¥–µ—Å—å:</p>
    <div id="drop-area1" class="drop-area"></div>
  </div>

  <div class="task-container">
    <div class="task-title">2. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞–¥–ø–∏—Å—å:</div>
    <div class="oracle-text">Ë≤û‰∏çÈõ®</div>
    
    <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–≤–∞:</p>
    <div id="word-pool2" class="word-pool"></div>

    <p>–°–æ–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –∑–¥–µ—Å—å:</p>
    <div id="drop-area2" class="drop-area"></div>
  </div>

  <div class="controls">
    <button id="check-btn">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
    <button id="reset-btn">–°–±—Ä–æ—Å–∏—Ç—å</button>
  </div>

  <p id="result" class="message"></p>

  <script>
    // –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã (–±–µ–∑ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏)
    const expected1 = [
      ['–Ω–µ', '–±—É–¥–µ—Ç', '–¥–æ–∂–¥—è'],
      ['–Ω–µ', '–ø–æ–π–¥—ë—Ç', '–¥–æ–∂–¥—å'],
      ['–¥–æ–∂–¥—è', '–Ω–µ', '–±—É–¥–µ—Ç'],
      ['–¥–æ–∂–¥—å', '–Ω–µ', '–ø–æ–π–¥—ë—Ç'],
      ['–Ω–µ', '–±—É–¥–µ—Ç', '–¥–æ–∂–¥—å'],
      ['–Ω–µ', '–ø–æ–π–¥—ë—Ç', '–¥–æ–∂–¥—è']
    ];
    
    const expected2 = [
      ['—Å–ø—Ä–∞—à–∏–≤–∞–ª–∏', '–Ω–µ', '–±—É–¥–µ—Ç', '–¥–æ–∂–¥—è'],
      ['–≥–∞–¥–∞–ª–∏', '–Ω–µ', '–ø–æ–π–¥—ë—Ç', '–¥–æ–∂–¥—å'],
      ['—Å–ø—Ä–∞—à–∏–≤–∞–ª–∏', '–¥–æ–∂–¥—è', '–Ω–µ', '–±—É–¥–µ—Ç'],
      ['–≥–∞–¥–∞–ª–∏', '–¥–æ–∂–¥—å', '–Ω–µ', '–ø–æ–π–¥—ë—Ç'],
      ['—Å–ø—Ä–∞—à–∏–≤–∞–ª–∏', '–Ω–µ', '–ø–æ–π–¥—ë—Ç', '–¥–æ–∂–¥—å'],
      ['–≥–∞–¥–∞–ª–∏', '–Ω–µ', '–±—É–¥–µ—Ç', '–¥–æ–∂–¥—è']
    ];

    // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è + –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–º–∞–Ω–æ–∫
    const words1 = ['–Ω–µ', '–±—É–¥–µ—Ç', '–ø–æ–π–¥—ë—Ç', '–¥–æ–∂–¥—è', '–¥–æ–∂–¥—å', '–≤–æ–∑–º–æ–∂–Ω–æ', '–º–æ–∂–µ—Ç', '–ª–∏', '–¥–æ–∂–¥–ª–∏–≤–æ'];
    const words2 = ['—Å–ø—Ä–∞—à–∏–≤–∞–ª–∏', '–≥–∞–¥–∞–ª–∏', '–Ω–µ', '–±—É–¥–µ—Ç', '–ø–æ–π–¥—ë—Ç', '–¥–æ–∂–¥—è', '–¥–æ–∂–¥—å', '–∑–∞–¥–∞–≤–∞–ª–∏', '–ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–ª–∏'];

    const wordPool1 = document.getElementById('word-pool1');
    const wordPool2 = document.getElementById('word-pool2');
    const dropArea1 = document.getElementById('drop-area1');
    const dropArea2 = document.getElementById('drop-area2');
    const checkBtn = document.getElementById('check-btn');
    const resetBtn = document.getElementById('reset-btn');
    const resultEl = document.getElementById('result');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    function init() {
      wordPool1.innerHTML = '';
      wordPool2.innerHTML = '';
      dropArea1.innerHTML = '';
      dropArea2.innerHTML = '';
      
      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—É–ª–∞
      const shuffled1 = [...words1].sort(() => Math.random() - 0.5);
      const shuffled2 = [...words2].sort(() => Math.random() - 0.5);
      
      // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ —Å–ª–æ–≤ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
      shuffled1.forEach(word => {
        createWordBox(word, wordPool1, dropArea1);
      });
      
      // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ —Å–ª–æ–≤ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
      shuffled2.forEach(word => {
        createWordBox(word, wordPool2, dropArea2);
      });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    function createWordBox(word, pool, dropArea) {
      const box = document.createElement('div');
      box.className = 'word-box';
      box.textContent = word;
      box.draggable = true;

      box.addEventListener('dragstart', (e) => {
        e.dataTransfer.setData('text/plain', word);
        box.classList.add('dragging');
      });

      box.addEventListener('dragend', () => {
        box.classList.remove('dragging');
      });

      pool.appendChild(box);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop
      dropArea.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropArea.style.borderColor = '#e67e22';
      });

      dropArea.addEventListener('dragleave', () => {
        dropArea.style.borderColor = '#3498db';
      });

      dropArea.addEventListener('drop', (e) => {
        e.preventDefault();
        dropArea.style.borderColor = '#3498db';

        const word = e.dataTransfer.getData('text/plain');
        const draggedBox = [...pool.children].find(b => b.textContent === word && b.draggable);

        if (draggedBox) {
          const clone = draggedBox.cloneNode(true);
          clone.draggable = false;
          clone.style.cursor = 'default';
          draggedBox.remove();
          dropArea.appendChild(clone);
        }
      });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    checkBtn.addEventListener('click', () => {
      const current1 = Array.from(dropArea1.children).map(el => el.textContent.trim());
      const current2 = Array.from(dropArea2.children).map(el => el.textContent.trim());
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥
      const isCorrect1 = expected1.some(option => arraysEqual(current1, option));
      const isCorrect2 = expected2.some(option => arraysEqual(current2, option));
      
      if (isCorrect1 && isCorrect2) {
        resultEl.innerHTML = `‚úÖ <strong>–í–µ—Ä–Ω–æ!</strong> –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –æ–±–µ –Ω–∞–¥–ø–∏—Å–∏.<br>
          <em>‰∏çÂÖ∂Èõ®</em> = ¬´${current1.join(' ')}¬ª<br>
          <em>Ë≤û ‰∏çÈõ®</em> = ¬´${current2.join(' ')}¬ª`;
        resultEl.className = 'message success';
        sendResult(true);
      } else {
        let message = '‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.';
        if (!isCorrect1 && isCorrect2) {
          message = '‚ùå –ü–µ—Ä–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ–≤–µ—Ä–µ–Ω. –í—Ç–æ—Ä–æ–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.';
        } else if (isCorrect1 && !isCorrect2) {
          message = '‚ùå –í—Ç–æ—Ä–æ–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ–≤–µ—Ä–µ–Ω. –ü–µ—Ä–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.';
        }
        resultEl.textContent = message;
        resultEl.className = 'message';
        sendResult(false, '–û—à–∏–±–∫–∞ –≤ –ø–µ—Ä–µ–≤–æ–¥–µ');
      }
    });

    // –°–±—Ä–æ—Å
    resetBtn.addEventListener('click', init);

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    function arraysEqual(a, b) {
      if (a.length !== b.length) return false;
      for (let i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) return false;
      }
      return true;
    }

    function sendResult(success, message) {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success: !!success,
        message: message || (success ? "–ü–µ—Ä–µ–≤–æ–¥ —Å–æ–±—Ä–∞–Ω –≤–µ—Ä–Ω–æ" : "–û—à–∏–±–∫–∞ –≤ –ø–æ—Ä—è–¥–∫–µ —Å–ª–æ–≤")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    init();
  </script>
</body>
</html>

<!-- –°–∏–≥–Ω–∞–ª: —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ -->
<script>
  window.parent.postMessage({
    type: "TASK_EXISTS",
    valid: true
  }, "*");
</script> -e 

=== üìÑ task7.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂÖÅ?</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
      line-height: 1.6;
    }
    h2 {
      color: #2c3e50;
      text-align: center;
      margin-bottom: 20px;
    }
    .oracle-text {
      font-size: 24px;
      text-align: center;
      margin: 20px 0;
      font-weight: bold;
      letter-spacing: 1px;
    }
    .options {
      margin: 20px 0;
      display: flex;
      flex-direction: column;
    }
    .option {
      margin: 8px 0;
      padding: 12px;
      background: #f8f9fa;
      border: 1px solid #ddd;
      border-radius: 6px;
      cursor: pointer;
      transition: all 0.2s;
    }
    .option:hover {
      background: #eef7ff;
      border-color: #3498db;
    }
    .option.selected {
      background: #d4edff;
      border-color: #3498db;
      box-shadow: 0 0 0 2px #b3d7ff;
    }
    .option input {
      margin-right: 10px;
    }
    button {
      padding: 12px 20px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin: 20px auto;
      display: block;
      transition: background 0.2s;
    }
    button:hover {
      background: #2980b9;
    }
    #result {
      margin-top: 20px;
      padding: 15px;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
    }
    .success {
      background: #e8f5e9;
      color: #27ae60;
    }
    .error {
      background: #ffebee;
      color: #e74c3c;
    }
  </style>
</head>
<body>

  <h2>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ÂÖÅ?</h2>

  <div class="oracle-text">Áô∏‰∏ëÂÖÅÂÖ∂Èõ®</div>
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
    –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
  </button>
  <div class="pinyin-text">
    gu«ê ch«íu y«în q√≠ y«î
  </div>
</div>

<style>
  .pinyin-container {
    margin: 15px 0;
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .pinyin-toggle {
    background: #f5f5f5;
    border: none;
    padding: 8px 15px;
    width: 100%;
    text-align: left;
    cursor: pointer;
    font-size: 14px;
    color: #555;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .pinyin-toggle:hover {
    background: #eef7ff;
  }
  
  .pinyin-toggle::after {
    content: '‚ñº';
    font-size: 12px;
    transition: transform 0.2s;
  }
  
  .pinyin-text {
    padding: 0 15px;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    background: #fafafa;
    font-style: italic;
    color: #666;
    font-size: 15px;
  }
  
  .pinyin-text.expanded {
    padding: 12px 15px;
    max-height: 100px;
  }
  
  .pinyin-toggle.expanded::after {
    transform: rotate(180deg);
  }
</style>
  <div class="options" id="options-container">
    <!-- –í–∞—Ä–∏–∞–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ -->
  </div>

  <button onclick="check()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ
    const options = [
      { value: "correct", text: "–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ—à—ë–ª –¥–æ–∂–¥—å", correct: true },
      { value: "rain", text: "–ë—É–¥–µ—Ç –¥–æ–∂–¥—å", correct: false },
      { value: "no-rain", text: "–ù–µ –±—É–¥–µ—Ç –¥–æ–∂–¥—è", correct: false },
      { value: "said", text: "–ü—Ä–∞–≤–∏—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª", correct: false }
    ];

    let selectedValue = null;

    // –§—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
    function shuffleArray(array) {
      const arr = [...array];
      for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
      }
      return arr;
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    function renderOptions() {
      const container = document.getElementById("options-container");
      container.innerHTML = "";

      const shuffled = shuffleArray(options);

      shuffled.forEach(option => {
        const label = document.createElement("label");
        label.className = "option";

        const input = document.createElement("input");
        input.type = "radio";
        input.name = "q";
        input.value = option.value;

        input.onchange = () => {
          selectedValue = option.value;
          // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
          document.querySelectorAll('.option').forEach(el => el.classList.remove('selected'));
          // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π
          label.classList.add('selected');
        };

        const text = document.createTextNode(option.text);
        label.appendChild(input);
        label.appendChild(text);
        container.appendChild(label);
      });
    }

    function check() {
      if (!selectedValue) {
        document.getElementById("result").textContent = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞.";
        document.getElementById("result").className = "error";
        return;
      }

      const isCorrect = selectedValue === "correct";

      const resultEl = document.getElementById("result");
      if (isCorrect) {
        resultEl.textContent = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! ÂÖÅ ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, ¬´–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ—à—ë–ª –¥–æ–∂–¥—å¬ª.";
        resultEl.className = "success";
        sendResult(true);
      } else {
        resultEl.textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. ÂÖÅ –æ–∑–Ω–∞—á–∞–µ—Ç ¬´–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ¬ª, ¬´–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ¬ª ‚Äî —ç—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –∞ –Ω–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.";
        resultEl.className = "error";
        sendResult(false, "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ÂÖÅ");
      }
    }

    function sendResult(success, message) {
      window.parent.postMessage(
        {
          type: "TASK_RESULT",
          success,
          message: message || (success ? "–í–µ—Ä–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω–æ ÂÖÅ" : "–û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ÂÖÅ")
        },
        "*"
      );
    }

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ —Ä–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    window.onload = renderOptions;

    // –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task8.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –∑–Ω–∞—á–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
    const pairs = [
      { char: "Â£¨", meaning: "–ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (9-–π);" },
      { char: "ÂÖ∂", meaning: "–°–ª—É–∂–µ–±–Ω–æ–µ –Ω–∞—Ä–µ—á–∏–µ; —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –±—É–¥—É—â–µ–µ/–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å: ¬´–±—É–¥–µ—Ç –ª–∏?¬ª" },
      { char: "Â∑±", meaning: "–ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (6-–π);" },
      { char: "Âçú", meaning: "–ì–∞–¥–∞—Ç—å/–ì–∞–¥–∞—Ç–µ–ª—å" },
      { char: "ÂÖÅ", meaning: "–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ; –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç: ¬´–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ—à—ë–ª –¥–æ–∂–¥—å¬ª" }
    ];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ task9.html ===
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ: –∏–µ—Ä–æ–≥–ª–∏—Ñ ‚Üî –∑–Ω–∞—á–µ–Ω–∏–µ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    h2, p {
      text-align: center;
    }
    .match-container {
      display: flex;
      justify-content: space-around;
      gap: 30px;
      margin-top: 30px;
    }
    .column {
      width: 45%;
    }
    .column h3 {
      text-align: center;
      margin-bottom: 15px;
      color: #333;
    }
    .word-item, .def-item {
      padding: 12px 16px;
      margin: 8px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s;
      text-align: center;
      font-size: 18px;
      font-weight: bold;
    }
    .word-item:hover, .def-item:hover {
      background: #eef5ff;
      border-color: #66aaff;
    }
    .word-item.selected {
      background: #bbdefb;
      border-color: #1976d2;
      transform: scale(1.05);
    }
    .def-item.selected {
      background: #c8e6c9;
      border-color: #43a047;
      transform: scale(1.05);
    }
    .matched {
      background: #d4edda;
      border: 2px solid #28a745 !important;
      color: #155724;
      opacity: 0.9;
      cursor: default;
      font-weight: bold;
    }
    button {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      font-size: 16px;
    }
    #result {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <h2>–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏–µ—Ä–æ–≥–ª–∏—Ñ –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ</h2>
  <p>–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–µ—Ä–æ–≥–ª–∏—Ñ —Å–ª–µ–≤–∞, –∑–∞—Ç–µ–º ‚Äî –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∞</p>

  <div class="match-container">
    <!-- –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã -->
    <div class="column">
      <h3>–ò–µ—Ä–æ–≥–ª–∏—Ñ—ã</h3>
      <div id="words"></div>
    </div>

    <!-- –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –∑–Ω–∞—á–µ–Ω–∏—è -->
    <div class="column">
      <h3>–ó–Ω–∞—á–µ–Ω–∏—è</h3>
      <div id="defs"></div>
    </div>
  </div>

  <button onclick="reset()">–°–±—Ä–æ—Å–∏—Ç—å</button>
  <p id="result"></p>

  <script>
    // –ü—è—Ç—å –ø–∞—Ä –∏–∑ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏
const pairs = [
  { char: "‰∏ç", meaning: "–ù–µ; –ö–∞–∫ –≤ ¬´–Ω–µ –±—É–¥–µ—Ç –¥–æ–∂–¥—è¬ª" },
  { char: "Áéã", meaning: "–ü—Ä–∞–≤–∏—Ç–µ–ª—å / –¶–∞—Ä—å" },
  { char: "‰∏ô", meaning: "–ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (3-–π)" },
  { char: "Âç†", meaning: "–ò—Å—Ç–æ–ª–∫–æ–≤–∞—Ç—å –≥–∞–¥–∞–Ω–∏–µ / –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≥–∞–¥–∞–Ω–∏–µ" },
  { char: "Êõ∞", meaning: "–ì–æ–≤–æ—Ä–∏—Ç—å; –≤–≤–æ–¥–∏—Ç –ø—Ä—è–º—É—é —Ä–µ—á—å" }
];

    let selectedWord = null;
    let matchedPairs = 0;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
    function shuffle(arr) {
      return [...arr].sort(() => Math.random() - 0.5);
    }

    function init() {
      const wordList = document.getElementById("words");
      const defList = document.getElementById("defs");

      wordList.innerHTML = "";
      defList.innerHTML = "";

      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –∏ –∑–Ω–∞—á–µ–Ω–∏—è
      const shuffledChars = shuffle(pairs);
      const shuffledMeanings = shuffle(pairs.map(p => p.meaning));

      // –°–æ–∑–¥–∞—ë–º –ª–µ–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∏–µ—Ä–æ–≥–ª–∏—Ñ—ã)
      shuffledChars.forEach(item => {
        const el = document.createElement("div");
        el.className = "word-item";
        el.dataset.char = item.char;
        el.textContent = item.char;
        el.onclick = () => selectWord(el);
        wordList.appendChild(el);
      });

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤—É—é –∫–æ–ª–æ–Ω–∫—É (–∑–Ω–∞—á–µ–Ω–∏—è)
      shuffledMeanings.forEach(meaning => {
        const el = document.createElement("div");
        el.className = "def-item";
        el.dataset.meaning = meaning;
        el.textContent = meaning;
        el.onclick = () => selectDefinition(el);
        defList.appendChild(el);
      });
    }

    function selectWord(el) {
      if (el.classList.contains("matched")) return;

      document.querySelectorAll(".word-item.selected").forEach(e => e.classList.remove("selected"));
      selectedWord = null;

      el.classList.add("selected");
      selectedWord = el;
    }

    function selectDefinition(el) {
      if (el.classList.contains("matched") || !selectedWord) return;

      const char = selectedWord.dataset.char;
      const meaning = el.dataset.meaning;

      const isCorrect = pairs.some(p => p.char === char && p.meaning === meaning);

      if (isCorrect) {
        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ–º –ø–∞—Ä—É
        el.classList.add("matched");
        selectedWord.classList.add("matched");
        selectedWord.onclick = null;
        el.onclick = null;
        selectedWord = null;
        matchedPairs++;

        if (matchedPairs === 5) {
          document.getElementById("result").textContent = "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–∞—Ä—ã –ø–æ–¥–æ–±—Ä–∞–Ω—ã –≤–µ—Ä–Ω–æ.";
          sendResult(true);
        }
      } else {
        // –û—à–∏–±–∫–∞
        document.getElementById("result").textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
        setTimeout(() => {
          document.getElementById("result").textContent = "";
        }, 1500);

        selectedWord.classList.remove("selected");
        selectedWord = null;
      }
    }

    function reset() {
      matchedPairs = 0;
      document.getElementById("result").textContent = "";
      init();
    }

    function sendResult(success, message = "") {
      window.parent.postMessage({
        type: "TASK_RESULT",
        success,
        message: message || (success ? "–í—Å–µ –≤–µ—Ä–Ω–æ!" : "–ï—Å—Ç—å –æ—à–∏–±–∫–∏")
      }, "*");
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();

    // –°–∏–≥–Ω–∞–ª, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
  </script>
</body>
</html>-e 

=== üìÑ theory.html ===
<!DOCTYPE html>
<html lang="ru"><head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>–£—Ä–æ–∫ 1: –î—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫ ‚Äî –ì–∞–¥–∞–Ω–∏—è –æ –¥–æ–∂–¥–µ</title>
<style>
  body {
    font-family: 'Segoe UI', 'Microsoft YaHei', 'Noto Sans CJK SC', sans-serif;
    line-height: 1.8;
    color: #333;
    background: #f9f7f4;
    margin: 40px auto;
    max-width: 900px;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 12px;
    background: white;
  }

  h1, h2, h3 {
    color: #1a5fb4;
  }

  h1 {
    text-align: center;
    border-bottom: 3px double #1a5fb4;
    padding-bottom: 10px;
  }

  h2 {
    text-align: center;
    border-bottom: 1px solid #ccc;
    padding-bottom: 5px;
    margin-top: 30px;
  }

  .original {
    font-family: 'Noto Serif CJK SC', 'KaiTi', serif;
    font-size: 1.8em;
    background: #f0f8ff;
    padding: 15px;
    border-radius: 8px;
    margin: 20px 0;
    letter-spacing: 3px;
  }

  .comment {
    background: #f8f9fa;
    padding: 15px;
    border-left: 4px solid #1a5fb4;
    margin: 15px 0;
    font-size: 0.96em;
  }

  .table-container {
    overflow-x: auto;
    margin: 20px 0;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
    font-size: 0.95em;
  }

  th, td {
    border: 1px solid #ccc;
    padding: 10px;
    text-align: center;
  }

  th {
    background: #e6f2ff;
  }

  .footnote {
    font-size: 0.9em;
    color: #666;
    font-style: italic;
  }

  .exercise {
    background: #eef7ff;
    padding: 12px;
    border-radius: 8px;
    margin: 15px 0;
    border: 1px dashed #1a5fb4;
  }

  .char-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 10px;
    margin: 20px 0;
  }

  .char-item {
    display: flex;
    justify-content: space-between;
    background: #f0f8ff;
    padding: 8px 12px;
    border-radius: 6px;
    font-family: 'Noto Serif CJK SC', serif;
    position: relative;
  }

  .footer {
    text-align: center;
    margin-top: 40px;
    color: #777;
    font-size: 0.9em;
  }

  .cycle-table {
    width: 100%;
    border-collapse: collapse;
    margin: 15px 0;
    font-size: 0.95em;
  }

  .cycle-table th, .cycle-table td {
    border: 1px solid #ccc;
    padding: 8px;
    text-align: center;
  }

  .cycle-table th {
    background: #e6f2ff;
  }

  .pinyin {
    font-size: 0.9em;
    color: #555;
    font-style: italic;
    display: block;
    margin-top: 2px;
  }

  .inline-char {
    font-family: 'Noto Serif CJK SC', serif;
    font-size: 1.1em;
  }

  .inline-pinyin {
    font-size: 0.85em;
    color: #555;
    margin-left: 4px;
  }

  /* === –°—Ç–∏–ª–∏ –¥–ª—è –∞—É–¥–∏–æ–ø–ª–µ–µ—Ä–∞ === */
  .audio-container {
    text-align: center;
    margin: 20px 0;
  }

  .audio-container audio {
    width: 80%;
    max-width: 600px;
    height: 50px;
    border: 1px solid #d0d8e8;
    border-radius: 10px;
    padding: 8px;
    background: #f5f9ff;
    box-shadow: 0 2px 8px rgba(26, 95, 180, 0.15);
  }

  /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–æ—Å—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è) */
  .audio-container audio::-webkit-media-controls-timeline,
  .audio-container audio::-webkit-media-controls-seek-back-button,
  .audio-container audio::-webkit-media-controls-seek-forward-button {
    display: block;
  }

  /* –ö–Ω–æ–ø–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è */
  .audio-container audio::-webkit-media-controls-play-button {
    background-color: #1a5fb4;
    border-radius: 50%;
    transform: scale(1.1);
  }

  /* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */
  .audio-container audio::-webkit-media-controls-timeline {
    color: #1a5fb4;
  }

  /* –û–±—â–∏–π —Å—Ç–∏–ª—å –ø–æ–ª–æ—Å—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */
  .audio-container audio::-webkit-media-controls-progress-bar {
    background-color: #e6f2ff;
    border-radius: 4px;
  }

  .audio-container audio::-webkit-media-controls-progress-bar::before {
    /* –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é ‚Äî —Å–∏–Ω—è—è */
    content: '';
    display: block;
    height: 100%;
    background: #1a5fb4;
    border-radius: 4px;
  }

  /* –ü–æ–¥–ø–∏—Å—å –ø–æ–¥ –ø–ª–µ–µ—Ä–æ–º */
  .audio-caption {
    font-size: 0.9em;
    color: #555;
    margin-top: 8px;
    font-style: italic;
  }
</style>
    <!-- –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç CSS –≤ <style> –ø–æ—Å–ª–µ –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ -->
<style>
  /* === –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∏–µ—Ä–æ–≥–ª–∏—Ñ–æ–≤ (–±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤) === */
  
  /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ ‚Äî –Ω–µ –º–µ—à–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å—Ç–∏–ª—é */
  .char-tooltip {
    display: none;
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    width: max-content;
    max-width: 260px;
    background: #1a5fb4; /* –æ—Å–Ω–æ–≤–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç */
    color: white;
    padding: 10px 12px;
    border-radius: 6px;
    font-size: 0.85em;
    text-align: left;
    white-space: normal;
    z-index: 10;
    box-shadow: 0 4px 12px rgba(26, 95, 180, 0.3);
    font-family: 'Segoe UI', 'Microsoft YaHei', sans-serif;
    line-height: 1.5;
  }

  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */
  .char-item:hover .char-tooltip {
    display: block;
  }

  /* –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
  .char-item {
    position: relative; /* –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ */
  }

  /* –î–µ–ª–∞–µ–º –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏/–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ */
  .char-item > span:first-child {
    cursor: help;
  }
</style>
</head>
<body>

  <h1>–£—Ä–æ–∫ 1: –ì–∞–¥–∞–Ω–∏—è –æ –¥–æ–∂–¥–µ</h1>

  <div class="original">
    ‰∏ôÂØÖÂçúÔºåÁà≠Ë≤ûÔºö„ÄåÈõ®Ôºü„Äç<br>
    Ë≤ûÊõ∞Ôºö„ÄåÂÖ∂Èõ®„ÄÇ„Äç<br>
    Ë≤ûÔºö„ÄåÁô∏‰∫•Ôºå‰∏çÂÖ∂Èõ®Ôºü„Äç<br>
    Èõ®„ÄÇÂÖÅ„ÄÇ‰∏çÈõ®„ÄÇË≤ûÔºö„Äå‰∏çÈõ®„ÄÇ„Äç<br>
    ÁéãÂç†Êõ∞Ôºö„ÄåÁô∏ÔºåÂÖ∂Èõ®„ÄÇ„ÄçÁô∏‰∏ëÔºåÂÖÅÂÖ∂Èõ®„ÄÇ<br>
    Â∑±ÂçØÂçúÔºåÁèèË≤ûÔºö„ÄåÈõ®Ôºü„Äç<br>
    ÁéãÂç†Êõ∞Ôºö„ÄåÈõ®„ÄÇ„ÄçÂ£¨ÂçàÔºåÂÖÅÈõ®„ÄÇ
  </div>
<!-- –¢—É–º–±–ª–µ—Ä –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –∏ —á–∏—Ç–∞–µ–º—ã–º —Ç–µ–∫—Å—Ç–æ–º -->
<div style="margin: 15px 0; text-align: center;">
  <label class="toggle-label">
    <input type="checkbox" id="readableToggle">
    –ü–æ–∫–∞–∑–∞—Ç—å —á–∏—Ç–∞–µ–º—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
  </label>
</div>

<!-- –ê—É–¥–∏–æ–æ–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞ -->
<div style="text-align: center; margin: 10px 0;">
  <audio controls style="vertical-align: middle;">
    <source src="./mp3/1.mp3" type="audio/mpeg">
    –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç <code>audio</code>.
  </audio>
  <div class="footnote" style="margin-top: 5px;">
    –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç–µ–∫—Å—Ç: –£—Ä–æ–∫ 1 ‚Äî –ì–∞–¥–∞–Ω–∏—è –æ –¥–æ–∂–¥–µ
  </div>
</div>

<script>
  // –ê—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–π –≤–∏–¥: –¢–û–õ–¨–ö–û –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã, –±–µ–∑ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è, –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
  const originalText = `‰∏ôÂØÖÂçúÁà≠Ë≤ûÈõ®Ë≤ûÊõ∞ÂÖ∂Èõ®Ë≤ûÁô∏‰∫•‰∏çÂÖ∂Èõ®Èõ®ÂÖÅ‰∏çÈõ®Ë≤û‰∏çÈõ®ÁéãÂç†Êõ∞Áô∏ÂÖ∂Èõ®Áô∏‰∏ëÂÖÅÂÖ∂Èõ®Â∑±ÂçØÂçúÁèèË≤ûÈõ®ÁéãÂç†Êõ∞Èõ®Â£¨ÂçàÂÖÅÈõ®`;

  // –ß–∏—Ç–∞–µ–º—ã–π –≤–∏–¥: —Å –ø—É–Ω–∫—Ç—É–∞—Ü–∏–µ–π, —Ä–∞–∑–±–∏–≤–∫–æ–π –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  const readableText = `‰∏ôÂØÖÂçúÔºåÁà≠Ë≤ûÔºö„ÄåÈõ®Ôºü„Äç<br>
Ë≤ûÊõ∞Ôºö„ÄåÂÖ∂Èõ®„ÄÇ„Äç<br>
Ë≤ûÔºö„ÄåÁô∏‰∫•Ôºå‰∏çÂÖ∂Èõ®Ôºü„Äç<br>
Èõ®„ÄÇÂÖÅ„ÄÇ‰∏çÈõ®„ÄÇË≤ûÔºö„Äå‰∏çÈõ®„ÄÇ„Äç<br>
ÁéãÂç†Êõ∞Ôºö„ÄåÁô∏ÔºåÂÖ∂Èõ®„ÄÇ„ÄçÁô∏‰∏ëÔºåÂÖÅÂÖ∂Èõ®„ÄÇ<br>
Â∑±ÂçØÂçúÔºåÁèèË≤ûÔºö„ÄåÈõ®Ôºü„Äç<br>
ÁéãÂç†Êõ∞Ôºö„ÄåÈõ®„ÄÇ„ÄçÂ£¨ÂçàÔºåÂÖÅÈõ®„ÄÇ`;

  // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—Å—Ç–æ–º
  const textElement = document.querySelector('.original');
  const toggle = document.getElementById('readableToggle');

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  function updateText() {
    textElement.innerHTML = toggle.checked ? readableText : originalText;
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π (–∞—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–π) –≤–∏–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  textElement.innerHTML = originalText;

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞
  toggle.addEventListener('change', updateText);
</script>

<style>
  .toggle-label {
    display: inline-flex;
    align-items: center;
    font-size: 0.95em;
    color: #1a5fb4;
    cursor: pointer;
  }

  .toggle-label input[type="checkbox"] {
    margin-right: 8px;
    transform: scale(1.1);
  }
</style>
  <h2>–ì–†–ê–ú–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô</h2>

  <div class="comment">
    <h3>1.1. –ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h3>
    <p>–í —Ç–µ–∫—Å—Ç–∞—Ö –∏–Ω—å—Å–∫–∏—Ö –Ω–∞–¥–ø–∏—Å–µ–π, –∫–∞–∫ —É–∂–µ –æ—Ç–º–µ—á–∞–ª–æ—Å—å, –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –∫–∞–∫ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã—Ä–∞–∂–∞—é—Ç –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å, —Ç. –µ. —Ç—Ä–µ–±—É—é—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞: ¬´–¥–∞¬ª ‚Äî ¬´–Ω–µ—Ç¬ª (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –≤ –∏–Ω—å—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–∞—Ö –Ω–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã).</p>
    <p>–ü–æ —Å–≤–æ–µ–π —Ñ–æ—Ä–º–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞:</p>
    <ul>
      <li>ÁéãÁî∞ w√°ng ti√°n ‚Äî ¬´–ü—Ä–∞–≤–∏—Ç–µ–ª—å –æ—Ö–æ—Ç–∏—Ç—Å—è¬ª</li>
      <li>Ë≤ûÔºöÁéãÁî∞Ôºü zhƒìn: w√°ng ti√°n? ‚Äî ¬´–°–ø—Ä–∞—à–∏–≤–∞—é—Ç: ‚Äû–ü—Ä–∞–≤–∏—Ç–µ–ª—å –æ—Ö–æ—Ç–∏—Ç—Å—è?‚Äú¬ª</li>
    </ul>
    <p>–ü–æ-–≤–∏–¥–∏–º–æ–º—É, –≤ –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–º –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å –∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–æ–Ω–∞—Ü–∏–µ–π, –æ –∫–æ—Ç–æ—Ä–æ–π –º—ã —Å—É–¥–∏—Ç—å, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –Ω–µ –º–æ–∂–µ–º. –ü–æ—ç—Ç–æ–º—É –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–∞ —Ç–æ, —á—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º, –º–æ–∂–µ—Ç —Å–ª—É–∂–∏—Ç—å –¥–ª—è –Ω–∞—Å –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º —Å–ª–æ–≤–∞ Ë≤û zhƒìn ‚Äî ¬´—Å–ø—Ä–∞—à–∏–≤–∞—Ç—å¬ª.</p>
  </div>

  <div class="comment">
    <h3>1.2. –ü—Ä—è–º–∞—è —Ä–µ—á—å</h3>
    <p>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–µ–º –ø—Ä—è–º–æ–π —Ä–µ—á–∏ –≤ –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–æ Êõ∞ yuƒì ‚Äî ¬´–≥–æ–≤–æ—Ä–∏—Ç—å¬ª.</p>
    <p>–û–Ω–æ –º–æ–∂–µ—Ç —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ: Ë≤ûÊõ∞ zhƒìn yuƒì ‚Äî ¬´–°–ø—Ä–∞—à–∏–≤–∞—é—Ç: ‚Äû‚Ä¶‚Äú¬ª.</p>
    <p>–ö—Ä–æ–º–µ —Ç–æ–≥–æ, —ç—Ç–æ —Å–ª–æ–≤–æ –º–æ–∂–µ—Ç —Å—Ç–æ—è—Ç—å –ø–æ—Å–ª–µ –¥—Ä—É–≥–æ–≥–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º ¬´–≥–æ–≤–æ—Ä–∏—Ç—å¬ª, ¬´—Å–ø—Ä–∞—à–∏–≤–∞—Ç—å¬ª, ¬´–æ—Ç–≤–µ—á–∞—Ç—å¬ª –∏ —Ç. –¥.: ÁéãÂç†Êõ∞ w√°ng zhƒÅn yuƒì ‚Äî ¬´–ü—Ä–∞–≤–∏—Ç–µ–ª—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª: ‚Äû‚Ä¶‚Äú¬ª.</p>
    <p>–ü—Ä—è–º–∞—è —Ä–µ—á—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ—Å–ª–µ —Å–ª–æ–≤–∞ Êõ∞: ÁéãÂç†Êõ∞Ôºö„ÄåÈõ®„Äç w√°ng zhƒÅn yuƒì: ‚Äúy«î‚Äù ‚Äî ¬´–ü—Ä–∞–≤–∏—Ç–µ–ª—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª: ‚Äû–ë—É–¥–µ—Ç –¥–æ–∂–¥—å‚Äú¬ª.</p>
  </div>

  <div class="comment">
    <h3>1.3. –°–∫–∞–∑—É–µ–º–æ–µ</h3>
    <p>–ê–Ω–∞–ª–∏–∑–∏—Ä—É—è —Å—Ç—Ä–æ–π –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –º—ã –∏—Å—Ö–æ–¥–∏–º –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ –µ–≥–æ —Ü–µ–Ω—Ç—Ä–æ–º, —Ç. –µ. —Ç–µ–º —á–ª–µ–Ω–æ–º, –±–µ–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ —Ç–∞–∫–æ–≤–æ–µ –ø–µ—Ä–µ—Å—Ç–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å, —è–≤–ª—è–µ—Ç—Å—è —Å–∫–∞–∑—É–µ–º–æ–µ. –°–∫–∞–∑—É–µ–º–æ–µ ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —á–ª–µ–Ω –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –Ω–∏ –ø—Ä–∏ –∫–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—É—â–µ–Ω.</p>
    <p>–°–µ—Ä–∏–π–Ω–æ—Å—Ç—å –∏–Ω—å—Å–∫–∏—Ö –Ω–∞–¥–ø–∏—Å–µ–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–µ–∑ —Ç—Ä—É–¥–∞ –Ω–∞–π—Ç–∏ –ø–æ —ç—Ç–æ–º—É –ø—Ä–∏–∑–Ω–∞–∫—É —Å–∫–∞–∑—É–µ–º–æ–µ –≤ –∫–∞–∂–¥–æ–º –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å–µ—Ä–∏–∏. –ï—Å–ª–∏ –º—ã –∑–∞–ø–∏—à–µ–º –Ω–∞–¥–ø–∏—Å–∏ —É—Ä–æ–∫–∞ 1 –Ω–µ —Å–ø–ª–æ—à–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, –∞ –≤ –≤–∏–¥–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã (—Ç. –µ. —Ä–∞–∑–æ–±—å–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã —Å–ª–æ–≤–∞, –∏–º–µ—é—â–∏–µ –≤ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –æ–¥–Ω—É –∏ —Ç—É –∂–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é, –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –æ–¥–Ω–æ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–º —Å—Ç–æ–ª–±—Ü–µ), —Ç–æ –ø–æ–ª—É—á–∏–º —Å–ª–µ–¥—É—é—â–µ–µ:</p>
  </div>

  <div class="table-container">
    <table>
      <tbody><tr><th>–ü–æ–¥–ª–µ–∂–∞—â–µ–µ / –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ</th><th>–°–∫–∞–∑—É–µ–º–æ–µ</th><th>–ß–∞—Å—Ç–∏—Ü—ã / –≤—Ä–µ–º—è</th><th>–°–∫–∞–∑—É–µ–º–æ–µ (–¥–æ–∂–¥—å)</th></tr>
      <tr><td>‰∏ôÂØÖÂçúÁà≠ b«êng y√≠n b«î zhƒìng</td><td>Ë≤û zhƒìn</td><td>‚Äî</td><td>Èõ® y«î</td></tr>
      <tr><td>‚Äî</td><td>Ë≤ûÊõ∞ zhƒìn yuƒì</td><td>ÂÖ∂ q√≠</td><td>Èõ® y«î</td></tr>
      <tr><td>‚Äî</td><td>Ë≤û zhƒìn</td><td>Áô∏‰∫• gu«ê h√†i ‰∏ç b√π ÂÖ∂ q√≠</td><td>Èõ® y«î</td></tr>
      <tr><td>‚Äî</td><td>Ë≤û zhƒìn</td><td>‰∏ç b√π</td><td>Èõ® y«î</td></tr>
      <tr><td>Áéã w√°ng</td><td>Âç†Êõ∞ zhƒÅn yuƒì</td><td>Áô∏ gu«ê ÂÖ∂ q√≠</td><td>Èõ® y«î</td></tr>
      <tr><td>‚Äî</td><td>‚Äî</td><td>Áô∏‰∏ë gu«ê ch«íu ÂÖÅ y«în ÂÖ∂ q√≠</td><td>Èõ® y«î</td></tr>
      <tr><td>Â∑±ÂçØÂçúÁèè j«ê m«éo b«î ju√©</td><td>Ë≤û zhƒìn</td><td>‚Äî</td><td>Èõ® y«î</td></tr>
      <tr><td>Áéã w√°ng</td><td>Âç†Êõ∞ zhƒÅn yuƒì</td><td>‚Äî</td><td>Èõ® y«î</td></tr>
      <tr><td>‚Äî</td><td>‚Äî</td><td>Â£¨Âçà r√©n w«î ÂÖÅ y«în</td><td>Èõ® y«î</td></tr>
    </tbody></table>
  </div>

  <div class="comment">
    <p>–í –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–º –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ —Å–∫–∞–∑—É–µ–º–æ–µ –≤—Å–µ–≥–¥–∞ –≤—ã—Ä–∞–∂–µ–Ω–æ –ø—Ä–µ–¥–∏–∫–∞—Ç–∏–≤–æ–º, –æ–±–æ–∑–Ω–∞—á–∞—é—â–∏–º –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ü—Ä–∏ —ç—Ç–æ–º –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ –≤—ã—Ä–∞–∂–∞–µ—Ç—Å—è; –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ –≤ –ø—Ä–µ–¥–∏–∫–∞—Ç–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ—Ç –æ–±–æ–∑–Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–≤—à–µ–µ –≤ –ø—Ä–æ—à–ª–æ–º, –∏–º–µ—é—â–µ–µ –º–µ—Å—Ç–æ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –∏–ª–∏ –æ–∂–∏–¥–∞–µ–º–æ–µ –≤ –±—É–¥—É—â–µ–º. –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É. –¢–∞–∫, –≤–æ –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏ –Ω–∞–¥–ø–∏—Å–∏ —Å–∫–∞–∑—É–µ–º–æ–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ –±—É–¥—É—â–µ–º: ÂÖ∂Èõ® q√≠ y«î ‚Äî ¬´–ë—É–¥–µ—Ç –¥–æ–∂–¥—å?¬ª. –í —á–µ—Ç–≤–µ—Ä—Ç–æ–π —á–∞—Å—Ç–∏ –Ω–∞–¥–ø–∏—Å–∏ —Ç–æ—Ç –∂–µ –ø—Ä–µ–¥–∏–∫–∞—Ç–∏–≤ –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ, –∏–º–µ–≤—à–µ–µ –º–µ—Å—Ç–æ –≤ –ø—Ä–æ—à–ª–æ–º: ÂÖÅÈõ® y«în y«î ‚Äî ¬´–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–µ–ª –¥–æ–∂–¥—å¬ª.</p>
  </div>

  <div class="comment">
    <h3>1.4. –ü–æ–¥–ª–µ–∂–∞—â–µ–µ</h3>
    <p>–ü–æ–¥–ª–µ–∂–∞—â–µ–µ –≤ –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–º –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç —Å–∫–∞–∑—É–µ–º–æ–º—É. –í –¥–≤—É—Ö —Å–ª—É—á–∞—è—Ö –ø–æ–¥–ª–µ–∂–∞—â–µ–µ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å: –∞) –µ—Å–ª–∏ –æ–Ω–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –∏–∑ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –æ–ø—É—â–µ–Ω–æ –ø–æ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–º —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º; –±) –µ—Å–ª–∏ —Å–∫–∞–∑—É–µ–º–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω—ã–º —Å–ª–æ–≤–æ–º —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –±–µ–∑–ª–∏—á–Ω–æ–≥–æ –ø—Ä–µ–¥–∏–∫–∞—Ç–∏–≤–∞ (—á–∞—â–µ –≤—Å–µ–≥–æ –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π) ‚Äî Èõ® y«î ¬´–¥–æ–∂–¥–∏—Ç—å¬ª, È¢® fƒìng ¬´–¥—É—Ç—å¬ª (–æ –≤–µ—Ç—Ä–µ), Èõ∑ l√©i ¬´–≥—Ä–µ–º–µ—Ç—å¬ª (–æ –≥—Ä–æ–º–µ) –∏ —Ç. –¥.</p>
  </div>

  <div class="comment">
    <h3>1.5. –û–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏</h3>
    <p>–û–±—ã—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –≤—Ä–µ–º–µ–Ω–∏ ‚Äî –ø–µ—Ä–µ–¥ –ø–æ–¥–ª–µ–∂–∞—â–∏–º. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –æ–Ω–æ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–µ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å –ø—Ä–µ–¥–ª–æ–≥–æ–º: ‰∏ôÂØÖÂçú b«êng y√≠n b«î ‚Äî ¬´–í –¥–µ–Ω—å –±–∏–Ω-–∏–Ω—å –≥–∞–¥–∞–ª–∏¬ª (–ø–æ–¥–ª–µ–∂–∞—â–µ–µ –æ–ø—É—â–µ–Ω–æ); Áô∏‰∫• gu«ê h√†i ÂÖ∂Èõ® q√≠ y«î ‚Äî ¬´–í –¥–µ–Ω—å –≥—É–π-—Ö–∞–π –±—É–¥–µ—Ç –¥–æ–∂–¥—å¬ª (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –±–µ–∑–ª–∏—á–Ω—ã–º —Å–∫–∞–∑—É–µ–º—ã–º).</p>
  </div>

  <div class="comment">
    <h3>1.6. –ù–∞—Ä–µ—á–∏–µ</h3>
    <p>–û–¥–Ω–∏–º –∏–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–∫–∞–∑—É–µ–º–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –µ–≥–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–æ—á–µ—Ç–∞—Ç—å—Å—è —Å –Ω–∞—Ä–µ—á–∏—è–º–∏. –ù–∞—Ä–µ—á–∏–µ –≤—Å–µ–≥–¥–∞ —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–¥ —Å–∫–∞–∑—É–µ–º—ã–º. –ü–æ —Å–≤–æ–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –Ω–∞—Ä–µ—á–∏—è –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–≥–æ –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—è—é—Ç—Å—è –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã: —Å–ª—É–∂–µ–±–Ω—ã–µ –∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω—ã–µ.</p>
    <p>–°–ª—É–∂–µ–±–Ω—ã–µ –Ω–∞—Ä–µ—á–∏—è –Ω–µ –∏–º–µ—é—Ç –Ω–∏–∫–∞–∫–æ–≥–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (–∏–ª–∏, –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ, —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ). –û–Ω–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –ª–∏—à—å –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ—Å–ª–µ –Ω–∏—Ö —Å–ª–µ–¥—É–µ—Ç —Å–∫–∞–∑—É–µ–º–æ–µ. –í –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–º —è–∑—ã–∫–µ —Ç–∞–∫–∏–º –Ω–∞—Ä–µ—á–∏–µ–º —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–æ ÂÖ∂ q√≠: ÂÖ∂Èõ® q√≠ y«î ‚Äî ¬´–ò–¥–µ—Ç –¥–æ–∂–¥—å¬ª.</p>
    <p>–°–º—ã—Å–ª–æ–≤—ã–µ –Ω–∞—Ä–µ—á–∏—è –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–ª—É–∂–µ–±–Ω—ã—Ö –∏–º–µ—é—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —É—Ç–æ—á–Ω—è—é—â–µ–µ —Å–∫–∞–∑—É–µ–º–æ–µ. –í –¥–∞–Ω–Ω–æ–º —É—Ä–æ–∫–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –æ–¥–Ω–æ –Ω–∞—Ä–µ—á–∏–µ, –æ—Ç–Ω–æ—Å—è—â–µ–µ—Å—è –∫ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, ‚Äî ÂÖÅ y«în ¬´–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ¬ª, ¬´–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ¬ª, –Ω–∞–ø—Ä–∏–º–µ—Ä: ÂÖÅÈõ® y«în y«î ‚Äî ¬´–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–µ–ª –¥–æ–∂–¥—å¬ª.</p>
  </div>

  <div class="comment">
    <h3>1.7. –û—Ç—Ä–∏—Ü–∞–Ω–∏—è</h3>
    <p>–û—Ç—Ä–∏—Ü–∞–Ω–∏–µ –≤—Å–µ–≥–¥–∞ —Å—Ç–∞–≤–∏—Ç—Å—è –ø–µ—Ä–µ–¥ —Å–∫–∞–∑—É–µ–º—ã–º. –ï—Å–ª–∏ –∂–µ –ø–µ—Ä–µ–¥ —Å–∫–∞–∑—É–µ–º—ã–º —Å—Ç–æ–∏—Ç —É–∂–µ —Å–ª—É–∂–µ–±–Ω–æ–µ –Ω–∞—Ä–µ—á–∏–µ, —Ç–æ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ —Å—Ç–∞–≤–∏—Ç—Å—è –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º: ‰∏çÂÖ∂Èõ® b√π q√≠ y«î ‚Äî ¬´–ù–µ –∏–¥–µ—Ç –¥–æ–∂–¥—å¬ª.</p>
    <p>–û—Ç–º–µ—Ç–∏–º, —á—Ç–æ —Å–º—ã—Å–ª–æ–≤–æ–µ –Ω–∞—Ä–µ—á–∏–µ –º–æ–∂–µ—Ç —Å—Ç–æ—è—Ç—å –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ–º: ÂÖÅ‰∏çÂÖ∂Èõ® y«în b√π q√≠ y«î ‚Äî ¬´–ò –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –Ω–µ –∏–¥–µ—Ç –¥–æ–∂–¥—å¬ª.</p>
    <p>–ù–∞–∏–±–æ–ª–µ–µ —É–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑ —á–∏—Å–ª–∞ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è –≤ –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–º –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ –æ—Ç—Ä–∏—Ü–∞–Ω–∏–π ‚Äî ‰∏ç b√π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –¥—Ä—É–≥–∏—Ö —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–ª–æ–≤ —Ç–æ–π –∂–µ –≥—Ä—É–ø–ø—ã —Ç–µ–º, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º, —Ç. –µ. –Ω–µ –Ω–µ—Å–µ—Ç –Ω–∏–∫–∞–∫–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Å–º—ã—Å–ª–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏.</p>
  </div>

  <div class="comment">
    <h3>1.8. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h3>
    <p>–í —Ç–µ—Ö —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ –ª–∏—Ü–æ (–ø—Ä–µ–¥–º–µ—Ç) –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏ –Ω–∞—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º, –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º, –º—ã –∏–º–µ–µ–º –¥–µ–ª–æ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º. –í –∞—Ä—Ö–∞–∏—á–µ—Å–∫–æ–º —è–∑—ã–∫–µ –ø—Ä–∏ —ç—Ç–æ–º –∏–º—è –Ω–∞—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –ª–∏—á–Ω–æ–µ –∏–º—è —Å–ª–µ–¥—É–µ—Ç –∑–∞ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞ (–¥–æ–ª–∂–Ω–æ—Å—Ç–∏): ÂçúÁà≠ b«î zhƒìng ‚Äî ¬´–≥–∞–¥–∞—Ç–µ–ª—å –ß–∂—ç–Ω¬ª.</p>
  </div>

  <h2>–°–ü–ò–°–û–ö –°–õ–û–í –£–†–û–ö–ê 1</h2>

<div class="char-list">
  <div class="char-item">
    <span>‰∏ô<span class="inline-pinyin">b«êng</span></span>
    <div class="char-tooltip">
      –ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (3-–π); –≤ –ø–∞—Ä–µ —Å ÂØÖ ‚Äî –¥–µ–Ω—å ¬´b«êng y√≠n¬ª
    </div>
  </div>

  <div class="char-item">
    <span>ÂØÖ<span class="inline-pinyin">y√≠n</span></span>
    <div class="char-tooltip">
      –ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (3-—è); –≤ –ø–∞—Ä–µ —Å ‰∏ô ‚Äî –¥–µ–Ω—å ¬´b«êng y√≠n¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Âçú<span class="inline-pinyin">b«î</span></span>
    <div class="char-tooltip">
      –ì–∞–¥–∞—Ç—å; –≤ —Å–æ—Å—Ç–∞–≤–µ Âêç + Âçú ‚Äî ¬´–≥–∞–¥–∞—Ç–µ–ª—å –ø–æ –∏–º–µ–Ω–∏...¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Áà≠<span class="inline-pinyin">zhƒìng</span></span>
    <div class="char-tooltip">
      –ò–º—è –≥–∞–¥–∞—Ç–µ–ª—è; ÂçúÁà≠ ‚Äî ¬´–≥–∞–¥–∞—Ç–µ–ª—å –ß–∂—ç–Ω¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Ë≤û<span class="inline-pinyin">zhƒìn</span></span>
    <div class="char-tooltip">
      –°–ø—Ä–∞—à–∏–≤–∞—Ç—å (–≤ –≥–∞–¥–∞–Ω–∏–∏); –º–∞—Ä–∫–µ—Ä –≤–æ–ø—Ä–æ—Å–∞: ¬´—Å–ø—Ä–∞—à–∏–≤–∞—é—Ç: ...?¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Èõ®<span class="inline-pinyin">y«î</span></span>
    <div class="char-tooltip">
      –î–æ–∂–¥—å; —Å–∫–∞–∑—É–µ–º–æ–µ: ¬´–±—É–¥–µ—Ç –¥–æ–∂–¥—å¬ª, ¬´–∏–¥—ë—Ç –¥–æ–∂–¥—å¬ª, ¬´–ø—Ä–æ—à—ë–ª –¥–æ–∂–¥—å¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Êõ∞<span class="inline-pinyin">yuƒì</span></span>
    <div class="char-tooltip">
      –ì–æ–≤–æ—Ä–∏—Ç—å; –≤–≤–æ–¥–∏—Ç –ø—Ä—è–º—É—é —Ä–µ—á—å: ¬´—Å–∫–∞–∑–∞–ª: ‚Äû...‚Äú¬ª
    </div>
  </div>

  <div class="char-item">
    <span>ÂÖ∂<span class="inline-pinyin">q√≠</span></span>
    <div class="char-tooltip">
      –°–ª—É–∂–µ–±–Ω–æ–µ –Ω–∞—Ä–µ—á–∏–µ; —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –±—É–¥—É—â–µ–µ/–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å: ¬´–±—É–¥–µ—Ç –ª–∏?¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Áô∏<span class="inline-pinyin">gu«ê</span></span>
    <div class="char-tooltip">
      –ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (10-–π); —á–∞—Å—Ç—å –¥–∞—Ç: Áô∏‰∫•, Áô∏‰∏ë
    </div>
  </div>

  <div class="char-item">
    <span>‰∫•<span class="inline-pinyin">h√†i</span></span>
    <div class="char-tooltip">
      –ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (12-—è); –≤ –ø–∞—Ä–µ —Å Áô∏ ‚Äî ¬´–≥—É–π-—Ö–∞–π¬ª
    </div>
  </div>

  <div class="char-item">
    <span>‰∏ç<span class="inline-pinyin">b√π</span></span>
    <div class="char-tooltip">
      –ù–µ; –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–∫–∞–∑—É–µ–º—ã–º: ¬´–Ω–µ –±—É–¥–µ—Ç –¥–æ–∂–¥—è¬ª
    </div>
  </div>

  <div class="char-item">
    <span>ÂÖÅ<span class="inline-pinyin">y«în</span></span>
    <div class="char-tooltip">
      –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ; –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç: ¬´–∏ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –ø–æ—à—ë–ª –¥–æ–∂–¥—å¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Áéã<span class="inline-pinyin">w√°ng</span></span>
    <div class="char-tooltip">
      –ü—Ä–∞–≤–∏—Ç–µ–ª—å; –ø–æ–¥–ª–µ–∂–∞—â–µ–µ: ¬´—Ü–∞—Ä—å —Å–∫–∞–∑–∞–ª¬ª, ¬´—Ü–∞—Ä—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Âç†<span class="inline-pinyin">zhƒÅn</span></span>
    <div class="char-tooltip">
      –ò—Å—Ç–æ–ª–∫–æ–≤—ã–≤–∞—Ç—å (–≥–∞–¥–∞–Ω–∏–µ); ÁéãÂç†Êõ∞ ‚Äî ¬´—Ü–∞—Ä—å –∏—Å—Ç–æ–ª–∫–æ–≤–∞–ª: ‚Äû...‚Äú¬ª
    </div>
  </div>

  <div class="char-item">
    <span>‰∏ë<span class="inline-pinyin">ch«íu</span></span>
    <div class="char-tooltip">
      –ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (2-—è); –≤ –ø–∞—Ä–µ —Å Áô∏ ‚Äî ¬´–≥—É–π-—á–æ—É¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Â∑±<span class="inline-pinyin">j«ê</span></span>
    <div class="char-tooltip">
      –ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (6-–π); –≤ –ø–∞—Ä–µ —Å ÂçØ ‚Äî ¬´—Ü–∑–∏-–º–∞–æ¬ª
    </div>
  </div>

  <div class="char-item">
    <span>ÂçØ<span class="inline-pinyin">m«éo</span></span>
    <div class="char-tooltip">
      –ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (4-—è); –¥–µ–Ω—å ¬´—Ü–∑–∏-–º–∞–æ¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Áèè<span class="inline-pinyin">ju√©</span></span>
    <div class="char-tooltip">
      –ò–º—è –≥–∞–¥–∞—Ç–µ–ª—è; ÂçúÁèè ‚Äî ¬´–≥–∞–¥–∞—Ç–µ–ª—å –¶–∑—é—ç¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Â£¨<span class="inline-pinyin">r√©n</span></span>
    <div class="char-tooltip">
      –ù–µ–±–µ—Å–Ω—ã–π —Å—Ç–≤–æ–ª (9-–π); –≤ –ø–∞—Ä–µ —Å Âçà ‚Äî ¬´–∂—ç–Ω—å-—É¬ª
    </div>
  </div>

  <div class="char-item">
    <span>Âçà<span class="inline-pinyin">w«î</span></span>
    <div class="char-tooltip">
      –ó–µ–º–Ω–∞—è –≤–µ—Ç–≤—å (7-—è); –¥–µ–Ω—å ¬´–∂—ç–Ω—å-—É¬ª
    </div>
  </div>
</div>


  <h2>–õ–ï–ö–°–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô</h2>

  <div class="comment">
    <h3>1‚Äî1. –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–∫–∏</h3>
    <p>–í –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–≤–∞ –Ω–∞–±–æ—Ä–∞, –∏–ª–∏ —Ü–∏–∫–ª–∞, –∑–Ω–∞–∫–æ–≤, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Ö—Å—è –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –¥–Ω–µ–π. –í –ø–µ—Ä–≤–æ–º —Ü–∏–∫–ª–µ ‚Äî –¥–µ—Å—è—Ç—å –∑–Ω–∞–∫–æ–≤: Áî≤ ji«é, ‰πô y«ê, ‰∏ô b«êng, ‰∏Å dƒ´ng, Êàä w√π, Â∑± j«ê, Â∫ö gƒìng, Ëæõ xƒ´n, Â£¨ r√©n, Áô∏ gu«ê; –≤–æ –≤—Ç–æ—Ä–æ–º ‚Äî –¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å: Â≠ê z«ê, ‰∏ë ch«íu, ÂØÖ y√≠n, ÂçØ m«éo, Ëæ∞ ch√©n, Â∑≥ s√¨, Âçà w«î, Êú™ w√®i, Áî≥ shƒìn, ÈÖâ y«íu, Êàå x≈´, ‰∫• h√†i.</p>
    <p>–ü–µ—Ä–≤—ã–π –∑–Ω–∞–∫ –ø–µ—Ä–≤–æ–≥–æ —Ü–∏–∫–ª–∞ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤—ã–º –∑–Ω–∞–∫–æ–º –≤—Ç–æ—Ä–æ–≥–æ —Ü–∏–∫–ª–∞, –≤—Ç–æ—Ä–æ–π –∑–Ω–∞–∫ ‚Äî —Å–æ –≤—Ç–æ—Ä—ã–º –∏ —Ç. –¥. –í —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞–µ—Ç—Å—è 60 —Å–æ—á–µ—Ç–∞–Ω–∏–π:</p>
  </div>

  <div class="table-container">
  <table class="cycle-table">
    <tbody>
      <tr>
        <td>1. Áî≤Â≠ê<br>ji«é z«ê</td>
        <td>2. ‰πô‰∏ë<br>y«ê ch«íu</td>
        <td>3. ‰∏ôÂØÖ<br>b«êng y√≠n</td>
        <td>4. ‰∏ÅÂçØ<br>dƒ´ng m«éo</td>
      </tr>
      <tr>
        <td>5. ÊàäËæ∞<br>w√π ch√©n</td>
        <td>6. Â∑±Â∑≥<br>j«ê s√¨</td>
        <td>7. Â∫öÂçà<br>gƒìng w«î</td>
        <td>8. ËæõÊú™<br>xƒ´n w√®i</td>
      </tr>
      <tr>
        <td>9. Â£¨Áî≥<br>r√©n shƒìn</td>
        <td>10. Áô∏ÈÖâ<br>gu«ê y«íu</td>
        <td>11. Áî≤Êàå<br>ji«é x≈´</td>
        <td>12. ‰πô‰∫•<br>y«ê h√†i</td>
      </tr>
      <tr>
        <td>13. ‰∏ôÂ≠ê<br>b«êng z«ê</td>
        <td>14. ‰∏Å‰∏ë<br>dƒ´ng ch«íu</td>
        <td>15. ÊàäÂØÖ<br>w√π y√≠n</td>
        <td>16. Â∑±ÂçØ<br>j«ê m«éo</td>
      </tr>
      <tr>
        <td>17. Â∫öËæ∞<br>gƒìng ch√©n</td>
        <td>18. ËæõÂ∑≥<br>xƒ´n s√¨</td>
        <td>19. Â£¨Âçà<br>r√©n w«î</td>
        <td>20. Áô∏Êú™<br>gu«ê w√®i</td>
      </tr>
      <tr>
        <td>21. Áî≤Áî≥<br>ji«é shƒìn</td>
        <td>22. ‰πôÈÖâ<br>y«ê y«íu</td>
        <td>23. ‰∏ôÊàå<br>b«êng x≈´</td>
        <td>24. ‰∏Å‰∫•<br>dƒ´ng h√†i</td>
      </tr>
      <tr>
        <td>25. ÊàäÂ≠ê<br>w√π z«ê</td>
        <td>26. Â∑±‰∏ë<br>j«ê ch«íu</td>
        <td>27. Â∫öÂØÖ<br>gƒìng y√≠n</td>
        <td>28. ËæõÂçØ<br>xƒ´n m«éo</td>
      </tr>
      <tr>
        <td>29. Â£¨Ëæ∞<br>r√©n ch√©n</td>
        <td>30. Áô∏Â∑≥<br>gu«ê s√¨</td>
        <td>31. Áî≤Âçà<br>ji«é w«î</td>
        <td>32. ‰πôÊú™<br>y«ê w√®i</td>
      </tr>
      <tr>
        <td>33. ‰∏ôÁî≥<br>b«êng shƒìn</td>
        <td>34. ‰∏ÅÈÖâ<br>dƒ´ng y«íu</td>
        <td>35. ÊàäÊàå<br>w√π x≈´</td>
        <td>36. Â∑±‰∫•<br>j«ê h√†i</td>
      </tr>
      <tr>
        <td>37. Â∫öÂ≠ê<br>gƒìng z«ê</td>
        <td>38. Ëæõ‰∏ë<br>xƒ´n ch«íu</td>
        <td>39. Â£¨ÂØÖ<br>r√©n y√≠n</td>
        <td>40. Áô∏ÂçØ<br>gu«ê m«éo</td>
      </tr>
      <tr>
        <td>41. Áî≤Ëæ∞<br>ji«é ch√©n</td>
        <td>42. ‰πôÂ∑≥<br>y«ê s√¨</td>
        <td>43. ‰∏ôÂçà<br>b«êng w«î</td>
        <td>44. ‰∏ÅÊú™<br>dƒ´ng w√®i</td>
      </tr>
      <tr>
        <td>45. ÊàäÁî≥<br>w√π shƒìn</td>
        <td>46. Â∑±ÈÖâ<br>j«ê y«íu</td>
        <td>47. Â∫öÊàå<br>gƒìng x≈´</td>
        <td>48. Ëæõ‰∫•<br>xƒ´n h√†i</td>
      </tr>
      <tr>
        <td>49. Â£¨Â≠ê<br>r√©n z«ê</td>
        <td>50. Áô∏‰∏ë<br>gu«ê ch«íu</td>
        <td>51. Áî≤ÂØÖ<br>ji«é y√≠n</td>
        <td>52. ‰πôÂçØ<br>y«ê m«éo</td>
      </tr>
      <tr>
        <td>53. ‰∏ôËæ∞<br>b«êng ch√©n</td>
        <td>54. ‰∏ÅÂ∑≥<br>dƒ´ng s√¨</td>
        <td>55. ÊàäÂçà<br>w√π w«î</td>
        <td>56. Â∑±Êú™<br>j«ê w√®i</td>
      </tr>
      <tr>
        <td>57. Â∫öÁî≥<br>gƒìng shƒìn</td>
        <td>58. ËæõÈÖâ<br>xƒ´n y«íu</td>
        <td>59. Â£¨Êàå<br>r√©n x≈´</td>
        <td>60. Áô∏‰∫•<br>gu«ê h√†i</td>
      </tr>
    </tbody>
  </table>
</div>

  <div class="comment">
    <p>–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å 60-—Ä–∏—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è —Å–æ—á–µ—Ç–∞–Ω–∏–µ–º Áî≤Â≠ê ji«é z«ê, –ø–æ—Å–ª–µ–¥–Ω–∏–π ‚Äî Áô∏‰∫• gu«ê h√†i; –∑–∞—Ç–µ–º —Å–Ω–æ–≤–∞ —Å–ª–µ–¥—É–µ—Ç Áî≤Â≠ê ji«é z«ê –∏ —Ç. –¥. –ï—Å–ª–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —è—Å–Ω–æ, –æ –∫–∞–∫–æ–π –¥–µ—Å—è—Ç–∏–¥–Ω–µ–≤–∫–µ –∏–¥–µ—Ç —Ä–µ—á—å, –≤—Ç–æ—Ä–æ–π –∑–Ω–∞–∫ –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ –º–æ–≥ –æ–ø—É—Å–∫–∞—Ç—å—Å—è.</p>
    <p>–°–æ—á–µ—Ç–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–∫–æ–≤ —É–ø–æ—Ç—Ä–µ–±–ª—è—é—Ç—Å—è –≤ –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ —Ç–æ–ª—å–∫–æ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ–Ω–∏, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ ‚Äî –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ—ç—Ç–æ–º—É —Ç–∞–∫–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∑–Ω–∞–∫–æ–≤, —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–Ω–æ–µ –±–µ–∑ –ø—Ä–µ–¥–ª–æ–≥–∞, –º–æ–∂–µ—Ç —Å–ª—É–∂–∏—Ç—å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–∞ –Ω–∞—á–∞–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: Áî≤Â≠ê ji«é z«ê ÂÖÅÂÖ∂Èõ® y«în q√≠ y«î ‚Äî ¬´–í –¥–µ–Ω—å —Ü–∑—è-—Ü–∑—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–µ–ª –¥–æ–∂–¥—å¬ª.</p>
  </div>

  <div class="footnote">
    <p><strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ –∑–Ω–∞–∫–µ Áèè:</strong> –í –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å—è—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–º—è –≥–∞–¥–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥–∞–Ω–æ –∫–∞–∫ <code>jue4</code> ‚Äî –≤–µ—Ä–æ—è—Ç–Ω–æ, –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ —à—Ä–∏—Ñ—Ç–∞—Ö —Ä–µ–¥–∫–æ–≥–æ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∞. –ó–¥–µ—Å—å —É—Å–ª–æ–≤–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–∫ <strong>Áèè</strong> (U+7389), –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø–æ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—é –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–µ–µ—Å—è –≤ –¥—Ä–µ–≤–Ω–∏—Ö –∏–º–µ–Ω–∞—Ö.</p>
  </div>

  <h2>–ó–ê–î–ê–ù–ò–Ø –î–õ–Ø –°–ê–ú–û–°–¢–û–Ø–¢–ï–õ–¨–ù–û–ô –†–ê–ë–û–¢–´</h2>

  <ol class="exercise">
    <li>–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏ –Ω–∞–π–¥–∏—Ç–µ –≤ –Ω—ë–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≤–∞–º —á–ª–µ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</li>
    <li>–ü–æ–ª—å–∑—É—è—Å—å —Å–ª–æ–≤–∞—Ä—ë–º, –¥–∞–π—Ç–µ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.</li>
    <li>–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–∏–π —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
      <ol type="a">
        <li>–ù–∞ —à–µ—Å—Ç–æ–π –¥–µ–Ω—å –ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –∑–∞–¥–∞–≤–∞–ª –≤–æ–ø—Ä–æ—Å–æ–≤.</li>
        <li>–í–æ–ø—Ä–æ—Å –≥–ª–∞—Å–∏—Ç: ¬´–ë—ã–ª –ª–∏ –¥–æ–∂–¥—å?¬ª</li>
        <li>–ì–∞–¥–∞—Ç–µ–ª—å –ß–∂—ç–Ω —Å–∫–∞–∑–∞–ª: ¬´–ü—Ä–∞–≤–∏—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å–æ–≤¬ª.</li>
        <li>–ù–∞ –¥–µ—Å—è—Ç—ã–π –¥–µ–Ω—å –ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø—Ä–æ—á–∏—Ç–∞–ª –æ—Ç–≤–µ—Ç –Ω–∞ –≥–∞–¥–∞—Ç–µ–ª—å–Ω–æ–π –∫–æ—Å—Ç–∏.</li>
      </ol>
    </li>
  </ol>

  <div class="footer">
    –£—á–µ–±–Ω–∏–∫: –ú.–í. –ö—Ä—é–∫–æ–≤, –•—É–∞–Ω –®—É–∏–Ω ‚Äî –ê—Ä—Ö–∞–∏—á–µ—Å–∫–∏–π –¥—Ä–µ–≤–Ω–µ–∫–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫<br>
    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ –≤ duolingo-–ø–æ–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, 2025
  </div>


</body></html>-e 

=== üìÑ –î–õ–Ø –í–°–¢–ê–í–ö–ò! pynyin.html ===
<div class="pinyin-container">
  <button class="pinyin-toggle" onclick="this.nextElementSibling.classList.toggle('expanded')">
    –ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω—å–∏–Ω—å ‚ñº
  </button>
  <div class="pinyin-text">
    Zhƒìn:„Äåjƒ´n xƒ´ q√≠ y«îÔºü„ÄçW√°ng zhƒÅn yuƒìÔºö„Äåq√≠ y«î„ÄÇ„Äç
  </div>
</div>

<style>
  .pinyin-container {
    margin: 15px 0;
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
  }
  
  .pinyin-toggle {
    background: #f5f5f5;
    border: none;
    padding: 8px 15px;
    width: 100%;
    text-align: left;
    cursor: pointer;
    font-size: 14px;
    color: #555;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .pinyin-toggle:hover {
    background: #eef7ff;
  }
  
  .pinyin-toggle::after {
    content: '‚ñº';
    font-size: 12px;
    transition: transform 0.2s;
  }
  
  .pinyin-text {
    padding: 0 15px;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    background: #fafafa;
    font-style: italic;
    color: #666;
    font-size: 15px;
  }
  
  .pinyin-text.expanded {
    padding: 12px 15px;
    max-height: 100px;
  }
  
  .pinyin-toggle.expanded::after {
    transform: rotate(180deg);
  }
</style>-e 

