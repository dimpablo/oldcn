<!DOCTYPE html>
<html lang="ru">
<head>
    <link rel="stylesheet" href="../../tasks.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–£—Ä–æ–∫ 6: –ò–Ω–≤–µ—Ä—Å–∏—è –∏–ª–∏ –Ω–µ—Ç?</title>
</head>
<body>
<h2>–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h2>
<div class="instructions-header" onclick="toggleInstructions()">üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (–Ω–∞–∂–º–∏ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è) ‚ñº</div>
<div class="instructions-content" style="display:none">
    <p><strong>–ò–Ω–≤–µ—Ä—Å–∏—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è</strong> ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø—Ä–∏:</p>
    <ul>
        <li>–û—Ç—Ä–∏—Ü–∞–Ω–∏–∏ <strong>‰∏ç</strong></li>
        <li>–ú–µ—Å—Ç–æ–∏–º—ë–Ω–Ω–æ–º –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–∏: <strong>Êàë, ‰Ωô, Êúï</strong></li>
    </ul>
    <p>–ü—Ä–∏–º–µ—Ä: <strong>‰∏çÊàëÈôçÁÜØ</strong> ‚Äî ‚úÖ –∏–Ω–≤–µ—Ä—Å–∏—è</p>
    <p><strong>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫</strong> ‚Äî –≤–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö.</p>
    <p>–ü—Ä–∏–º–µ—Ä: <strong>Â∏ùÂèóÊàë‰Ωë</strong> ‚Äî ‚ùå –Ω–µ –∏–Ω–≤–µ—Ä—Å–∏—è</p>
</div>
<div class="columns">
    <div id="column1" class="column"></div>
    <div id="column2" class="column"></div>
</div>
<button id="check-btn">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
<button id="reset-btn">–°–±—Ä–æ—Å–∏—Ç—å</button>
<p id="result"></p>
<script>
    const sentences = [
        { text: "‰∏çÊàëÈôçÁÜØ", type: "inversion", explanation: "–Ω–µ –ø–æ—à–ª—ë—Ç –ª–∏ –Ω–∞–º –∑–∞—Å—É—Ö—É? ‚Äî –∏–Ω–≤–µ—Ä—Å–∏—è –ø—Ä–∏ ‰∏ç + Êàë" },
        { text: "Â∏ùÂèóÊàë‰Ωë", type: "standard", explanation: "–¥–∞—Ä—É–µ—Ç –Ω–∞–º –ø–æ–º–æ—â—å ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫" },
        { text: "Â∏ù‰∏çÊàëÂèó‰Ωë", type: "inversion", explanation: "–Ω–µ –¥–∞—Ä—É–µ—Ç –ª–∏ –Ω–∞–º –ø–æ–º–æ—â—å? ‚Äî –∏–Ω–≤–µ—Ä—Å–∏—è" },
        { text: "‰∏ç‰ΩôÈôçÁÅΩ", type: "inversion", explanation: "–Ω–µ –ø–æ—à–ª—ë—Ç –ª–∏ –æ–Ω –±–µ–¥—Å—Ç–≤–∏–µ –Ω–∞–º?" },
        { text: "ÂúüÊñπÂæÅ‰∫éÊàëÊù±ÈÑô", type: "standard", explanation: "–ø–ª–µ–º—è –Ω–∞–ø–∞–ª–æ –Ω–∞ –Ω–∞—à—É –æ–∫—Ä–∞–∏–Ω—É ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç" },
        { text: "‰∏çÊàëÁÜØ", type: "inversion", explanation: "–Ω–µ –∏—Å—Å—É—à–∏—Ç –ª–∏ –Ω–∞—Å?" },
        { text: "ÂÖÅÊúâ‰æÜËâ±", type: "standard", explanation: "–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—à–ª–æ –±–µ–¥—Å—Ç–≤–∏–µ" },
        { text: "Áéã‰ª§Â©¶Â•Ω‰ºê", type: "standard", explanation: "–ø—Ä–∏–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–ø–∞–¥–∞—Ç—å ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç" }
    ];

    function shuffle(arr) {
        return [...arr].sort(() => Math.random() - 0.5);
    }

    function createItem(s, index) {
        const el = document.createElement('div');
        el.className = 'sentence-item';
        el.dataset.type = s.type;
        el.innerHTML = `
            <div class="oracle-text">${s.text}</div>
            <div class="options">
                <label><input type="radio" name="q${index}" value="inversion"> –∏–Ω–≤–µ—Ä—Å–∏—è</label>
                <label><input type="radio" name="q${index}" value="standard"> —Å—Ç–∞–Ω–¥–∞—Ä—Ç</label>
            </div>
        `;
        return el;
    }

    function init() {
        const shuffled = shuffle(sentences);
        const col1 = document.getElementById('column1');
        const col2 = document.getElementById('column2');
        col1.innerHTML = '';
        col2.innerHTML = '';
        shuffled.slice(0, 4).forEach((s, i) => col1.appendChild(createItem(s, i)));
        shuffled.slice(4).forEach((s, i) => col2.appendChild(createItem(s, i + 4)));
    }

    document.getElementById("check-btn").addEventListener("click", () => {
        const items = document.querySelectorAll('.sentence-item');
        let correct = 0;
        items.forEach((item, i) => {
            const selected = item.querySelector('input:checked');
            const expected = item.dataset.type;
            if (selected && selected.value === expected) correct++;
            item.style.border = (selected && selected.value === expected) ? '2px solid #4CAF50' : '2px solid #f44336';
        });
        const result = document.getElementById("result");
        if (correct === 8) {
            result.innerHTML = "‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ! –í—ã —É—Å–≤–æ–∏–ª–∏ –ø—Ä–∞–≤–∏–ª–æ –∏–Ω–≤–µ—Ä—Å–∏–∏.";
            sendResult(true);
        } else {
            result.innerHTML = `‚ùå ${correct}/8 –≤–µ—Ä–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å ‰∏ç + Êàë/‰Ωô.`;
            sendResult(false);
        }
        result.style.display = 'block';
    });

    document.getElementById("reset-btn").addEventListener("click", () => {
        init();
        document.getElementById("result").style.display = 'none';
    });

    function sendResult(success) {
        window.parent.postMessage({ type: "TASK_RESULT", success }, "*");
    }

    function toggleInstructions() {
        const content = document.querySelector('.instructions-content');
        const header = document.querySelector('.instructions-header');
        const isHidden = content.style.display === 'none';
        content.style.display = isHidden ? 'block' : 'none';
        header.innerHTML = `üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (–Ω–∞–∂–º–∏ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è) ${isHidden ? '‚ñ≤' : '‚ñº'}`;
    }

    init();
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>