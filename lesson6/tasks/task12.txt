<!DOCTYPE html>
<html lang="ru">
<head>
    <link rel="stylesheet" href="../../tasks.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Урок 6: Цепочка сказуемых</title>
</head>
<body>
<h2>Соберите фразу</h2>
<div class="instructions">
    <p><strong>Соберите фразу:</strong></p>
    <p><em>Ван следует за Си-Чжэнь, Ван не следует за Си-Чжэнь.</em></p>
</div>
<div class="toggle-hint" id="toggle-hint-btn">💡 Подсказка</div>
<div class="hint-container" id="hint-container">
    <ul class="hint-list">
        <li>王 — Ван</li>
        <li>從 — следовать за</li>
        <li>洗 — Си (племя)</li>
        <li>震 — Чжэнь (вождь)</li>
        <li>勿 — не (отрицание приказа)</li>
        <li>⚠️ 注意: В древнекитайском глаголы могут идти подряд без союзов: 王從洗震</li>
    </ul>
</div>
<p><strong>Иероглифы:</strong></p>
<div id="char-pool"></div>
<p><strong>Соберите здесь:</strong></p>
<div id="drop-area"></div>
<button id="check-btn">Проверить</button>
<button id="reset-btn">Сбросить</button>
<p id="result" class="message"></p>
<script>
    const expected = ['王', '從', '洗', '震', '勿', '從', '洗', '震'];
    const allChars = ['王', '從', '洗', '震', '勿', '令', '登', '人', '千', '伐', '工', '方'];
    let charPool, dropArea, resultEl;

    function init() {
        charPool = document.getElementById("char-pool");
        dropArea = document.getElementById("drop-area");
        resultEl = document.getElementById("result");
        renderChars();
    }

    function renderChars() {
        charPool.innerHTML = '';
        dropArea.innerHTML = '';
        allChars.forEach(char => {
            const box = document.createElement('div');
            box.className = 'char-box';
            box.textContent = char;
            box.onclick = () => addToDrop(box);
            charPool.appendChild(box);
        });
    }

    function addToDrop(box) {
        const clone = box.cloneNode(true);
        clone.onclick = () => { clone.remove(); charPool.appendChild(box); };
        dropArea.appendChild(clone);
    }

    document.getElementById("check-btn").addEventListener("click", () => {
        const current = Array.from(dropArea.children).map(c => c.textContent);
        if (arraysEqual(current, expected)) {
            resultEl.innerHTML = "✅ Правильно!<br><strong>王從洗震 勿從洗震</strong> — пример параллельных конструкций без союзов.";
            resultEl.className = "message success";
            sendResult(true);
        } else {
            resultEl.textContent = "❌ Попробуйте снова.";
            resultEl.className = "message";
            sendResult(false);
        }
    });

    document.getElementById("reset-btn").addEventListener("click", init);

    function arraysEqual(a, b) {
        return a.length === b.length && a.every((v,i) => v === b[i]);
    }

    function sendResult(success) {
        window.parent.postMessage({ type: "TASK_RESULT", success }, "*");
    }

    document.getElementById("toggle-hint-btn").addEventListener("click", () => {
        this.classList.toggle("active");
        document.getElementById("hint-container").classList.toggle("show");
    });

    init();
    window.parent.postMessage({ type: "TASK_EXISTS", valid: true }, "*");
</script>
</body>
</html>